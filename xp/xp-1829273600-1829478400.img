e */
    0,              /* case_sensitive */
    1,              /* fixed_prec_scale */
    0,              /* is_long */
    1,              /* auto_unique_value */
    10,             /* data_precision */
    null,               /* numeric_scale */
    null,               /* column_size */
    null,               /* literal_prefix */
    null,               /* literal_suffix */
    3 /*DB_ALL_EXCEPT_LIKE*/,   /* searchable */
    0,              /* unsigned_attribute */
    'int'               /* local_type_name */
    )   

/* Local Smallint */
insert into spt_provider_types values
    (
    52 /*SQLINT2*/,         /* ss_dtype */
    2,              /* fixlen */
    'smallint',         /* type_name */
    2 /*DBTYPE_I2*/,        /* oledb_data_type */
    1,              /* best_match */
    null,               /* is_nullable */
    0,              /* case_sensitive */
    1,              /* fixed_prec_scale */
    0,              /* is_long */
    1,              /* auto_unique_value */
    5,              /* data_precision */
    null,               /* numeric_scale */
    null,               /* column_size */
    null,               /* literal_prefix */
    null,               /* literal_suffix */
    3 /*DB_ALL_EXCEPT_LIKE*/,   /* searchable */
    0,              /* unsigned_attribute */
    'smallint'          /* local_type_name */
    )   

/* Local Tinyint */
insert into spt_provider_types values
    (
    48 /*SQLINT1*/,         /* ss_dtype */
    1,              /* fixlen */
    'tinyint',          /* type_name */
    17 /*DBTYPE_UI1*/,      /* oledb_data_type */
    1,              /* best_match */
    null,               /* is_nullable */
    0,              /* case_sensitive */
    1,              /* fixed_prec_scale */
    0,              /* is_long */
    1,              /* auto_unique_value */
    3,              /* data_precision */
    null,               /* numeric_scale */
    null,               /* column_size */
    null,               /* literal_prefix */
    null,               /* literal_suffix */
    3 /*DB_ALL_EXCEPT_LIKE*/,   /* searchable */
    1,              /* unsigned_attribute */
    'tinyint'           /* local_type_name */
    )   
commit tran
go
dump tran master with no_log
go
begin tran  
if (charindex('6.00', @@version) > 0 or
    charindex('6.50', @@version) > 0 or
    charindex('7.00', @@version) > 0 or
    charindex('8.00', @@version) > 0)
    begin   /*  Add 6.0 data types */
    
    /* Local Decimal */
    insert into spt_provider_types values
        (
        55 /*SQLDECIMAL*/,      /* ss_dtype */
        0,              /* fixlen */
        'decimal',          /* type_name */
        131 /*DBTYPE_NUMERIC*/,     /* oledb_data_type */
        0,              /* best_match */
        null,               /* is_nullable */
        0,              /* case_sensitive */
        1,              /* fixed_prec_scale */
        0,              /* is_long */
        1,              /* auto_unique_value */
        38,             /* data_precision */
        null,               /* numeric_scale */
        null,               /* column_size */
        null,               /* literal_prefix */
        null,               /* literal_suffix */
        3 /*DB_ALL_EXCEPT_LIKE*/,   /* searchable */
        0,              /* unsigned_attribute */
        'decimal'           /* local_type_name */
        )   

    /* Local Numeric */
    insert into spt_provider_types values
        (
        63 /*SQLNUMERIC*/,      /* ss_dtype */
        0,              /* fixlen */
        'numeric',          /* type_name */
        131 /*DBTYPE_NUMERIC*/,     /* oledb_data_type */
        1,              /* best_match */
        null,               /* is_nullable */
        0,              /* case_sensitive */
        1,              /* fixed_prec_scale */
        0,              /* is_long */
        1,              /* auto_unique_value */
        38,             /* data_precision */
        null,               /* numeric_scale */
        null,               /* column_size */
        null,               /* literal_prefix */
        null,               /* literal_suffix */
        3 /*DB_ALL_EXCEPT_LIKE*/,   /* searchable */
        0,              /* unsigned_attribute */
        'numeric'           /* local_type_name */
        )   
    end
commit tran
go
dump tran master with no_log
go
begin tran
if (charindex('7.00', @@version) = 0 and
    charindex('8.00', @@version) = 0)
    begin   /*  Add nullable type for non-Sphinx server */
    
    /* Local Floatn */
    insert into spt_provider_types values
        (
        109 /*SQLFLTN*/,        /* ss_dtype */
        8,              /* fixlen */
        'float',            /* type_name */
        5 /*DBTYPE_R8*/,        /* oledb_data_type */
        0,              /* best_match */
        null,               /* is_nullable */
        0,              /* case_sensitive */
        0,              /* fixed_prec_scale */
        0,              /* is_long */
        0,              /* auto_unique_value */
        15,             /* data_precision */
        null,               /* numeric_scale */
        null,               /* column_size */
        null,               /* literal_prefix */
        null,               /* literal_suffix */
        3 /*DB_ALL_EXCEPT_LIKE*/,   /* searchable */
        null,               /* unsigned_attribute */
        'float'             /* local_type_name */
        )   
    insert into spt_provider_types values
        (
        109 /*SQLFLT4*/,        /* ss_dtype */
        4,              /* fixlen */
        'real',             /* type_name */
        4 /*DBTYPE_R4*/,        /* oledb_data_type */
        0,              /* best_match */
        null,               /* is_nullable */
        0,              /* case_sensitive */
        0,              /* fixed_prec_scale */
        0,              /* is_long */
        0,              /* auto_unique_value */
        7,              /* data_precision */
        null,               /* numeric_scale */
        null,               /* column_size */
        null,               /* literal_prefix */
        null,               /* literal_suffix */
        3 /*DB_ALL_EXCEPT_LIKE*/,   /* searchable */
        null,               /* unsigned_attribute */
        'real'              /* local_type_name */
        )   

    /* Local Intn */
    insert into spt_provider_types values
        (
        38 /*SQLINTN*/,         /* ss_dtype */
        4,              /* fixlen */
        'int',              /* type_name */
        3 /*DBTYPE_I4*/,        /* oledb_data_type */
        1,              /* best_match */
        null,               /* is_nullable */
        0,              /* case_sensitive */
        1,              /* fixed_prec_scale */
        0,              /* is_long */
        1,              /* auto_unique_value */
        10,             /* data_precision */
        null,               /* numeric_scale */
        null,               /* column_size */
        null,               /* literal_prefix */
        null,               /* literal_suffix */
        3 /*DB_ALL_EXCEPT_LIKE*/,   /* searchable */
        0,              /* unsigned_attribute */
        'int'               /* local_type_name */
        )   
    insert into spt_provider_types values
        (
        38 /*SQLINTN*/,         /* ss_dtype */
        2,              /* fixlen */
        'smallint',         /* type_name */
        2 /*DBTYPE_I2*/,        /* oledb_data_type */
        0,              /* best_match */
        null,               /* is_nullable */
        0,              /* case_sensitive */
        1,              /* fixed_prec_scale */
        0,              /* is_long */
        1,              /* auto_unique_value */
        5,              /* data_precision */
        null,               /* numeric_scale */
        null,               /* column_size */
        null,               /* literal_prefix */
        null,               /* literal_suffix */
        3 /*DB_ALL_EXCEPT_LIKE*/,   /* searchable */
        0,              /* unsigned_attribute */
        'smallint'          /* local_type_name */
        )   
    insert into spt_provider_types values
        (
        38 /*SQLINTN*/,         /* ss_dtype */
        1,              /* fixlen */
        'tinyint',          /* type_name */
        17 /*DBTYPE_UI1*/,      /* oledb_data_type */
        0,              /* best_match */
        null,               /* is_nullable */
        0,              /* case_sensitive */
        1,              /* fixed_prec_scale */
        0,              /* is_long */
        1,              /* auto_unique_value */
        3,              /* data_precision */
        null,               /* numeric_scale */
        null,               /* column_size */
        null,               /* literal_prefix */
        null,               /* literal_suffix */
        3 /*DB_ALL_EXCEPT_LIKE*/,   /* searchable */
        1,              /* unsigned_attribute */
        'tinyint'           /* local_type_name */
        )   

    if (charindex('6.00', @@version) > 0 or charindex('6.50', @@version) > 0)
        begin   /*  Add 6.0 data types */
        
        /* Local Decimaln */
        insert into spt_provider_types values
            (
            106 /*SQLDECIMALN*/,        /* ss_dtype */
            0,              /* fixlen */
            'decimal',          /* type_name */
            131 /*DBTYPE_NUMERIC*/,     /* oledb_data_type */
            0,              /* best_match */
            null,               /* is_nullable */
            0,              /* case_sensitive */
            1,              /* fixed_prec_scale */
            0,              /* is_long */
            1,              /* auto_unique_value */
            38,             /* data_precision */
            null,               /* numeric_scale */
            null,               /* column_size */
            null,               /* literal_prefix */
            null,               /* literal_suffix */
            3 /*DB_ALL_EXCEPT_LIKE*/,   /* searchable */
            0,              /* unsigned_attribute */
            'decimal'           /* local_type_name */
            )   

        /* Local Numericn */
        insert into spt_provider_types values
            (
            108 /*SQLNUMERICN*/,        /* ss_dtype */
            0,              /* fixlen */
            'numeric',          /* type_name */
            131 /*DBTYPE_NUMERIC*/,     /* oledb_data_type */
            0,              /* best_match */
            null,               /* is_nullable */
            0,              /* case_sensitive */
            1,              /* fixed_prec_scale */
            0,              /* is_long */
            1,              /* auto_unique_value */
            38,             /* data_precision */
            null,               /* numeric_scale */
            null,               /* column_size */
            null,               /* literal_prefix */
            null,               /* literal_suffix */
            3 /*DB_ALL_EXCEPT_LIKE*/,   /* searchable */
            0,              /* unsigned_attribute */
            'numeric'           /* local_type_name */
            )   
        end
    end
commit tran
go
dump tran master with no_log
go

/*
**  Remaining data types
*/
if (charindex('7.00', @@version) = 0 and
    charindex('8.00', @@version) = 0)
begin
    print ''
    print ''
    print 'Warning:'
    print 'you are installing the stored procedures '
    print 'on a pre 8.0 SQL Server.'
    print 'Ignore the following errors.'
end
go
begin tran

if (charindex('7.00', @@version) > 0 or
    charindex('8.00', @@version) > 0)
    begin
    /* Local Bit */
    insert into spt_provider_types values
        (
        50 /*SQLBIT*/,          /* ss_dtype */
        0,              /* fixlen */
        'bit',              /* type_name */
        11 /*DBTYPE_BOOL*/,     /* oledb_data_type */
        1,              /* best_match */
        null,               /* is_nullable */
        0,              /* case_sensitive */
        0,              /* fixed_prec_scale */
        0,              /* is_long */
        0,              /* auto_unique_value */
        1,              /* data_precision */
        null,               /* numeric_scale */
        null,               /* column_size */
        null,               /* literal_prefix */
        null,               /* literal_suffix */
        3 /*DB_ALL_EXCEPT_LIKE*/,   /* searchable */
        null,               /* unsigned_attribute */
        'bit'               /* local_type_name */
        )       
    
    /* Local Timestamp */
    insert into spt_provider_types values
        (
        0,              /* ss_dtype */
        8,              /* fixlen */
        'timestamp',            /* type_name */
        128 /*DBTYPE_BYTES*/,       /* oledb_data_type */
        0,              /* best_match */
        null,               /* is_nullable */
        0,              /* case_sensitive */
        0,              /* fixed_prec_scale */
        0,              /* is_long */
        0,              /* auto_unique_value */
        null,               /* data_precision */
        null,               /* numeric_scale */
        null,               /* column_size */
        '0x',               /* literal_prefix */
        null,               /* literal_suffix */
        3 /*DB_ALL_EXCEPT_LIKE*/,   /* searchable */
        null,               /* unsigned_attribute */
        'timestamp'         /* local_type_name */
        )   
    /* Local GUID */
    insert into spt_provider_types values
        (
        0,              /* ss_dtype */
        16,             /* fixlen */
        'uniqueidentifier',     /* type_name */
        72 /*DBTYPE_GUID*/,     /* oledb_data_type */
        1,              /* best_match */
        null,               /* is_nullable */
        0,              /* case_sensitive */
        0,              /* fixed_prec_scale */
        0,              /* is_long */
        0,              /* auto_unique_value */
        null,               /* data_precision */
        null,               /* numeric_scale */
        null,               /* column_size */
        '''',               /* literal_prefix */
        '''',               /* literal_suffix */
        3 /*DB_ALL_EXCEPT_LIKE*/,   /* searchable */
        null,               /* unsigned_attribute */
        'uniqueidentifier'      /* local_type_name */
        )   
    
    /* Get case sensitivity */
    declare @ncase_sensitive bit
    select @ncase_sensitive = case when N'a' <> N'A' then 1 else 0 end

    /* Local NChar */
    insert into spt_provider_types values
        (
        0,              /* ss_dtype */
        0,              /* fixlen */
        'nchar',            /* type_name */
        130 /*DBTYPE_WSTR*/,        /* oledb_data_type */
        0,              /* best_match */
        null,               /* is_nullable */
        @ncase_sensitive,       /* case_sensitive */
        0,              /* fixed_prec_scale */
        0,              /* is_long */
        0,              /* auto_unique_value */
        null,               /* data_precision */
        null,               /* numeric_scale */
        null,               /* column_size */
        'N''',              /* literal_prefix */
        '''',               /* literal_suffix */
        4 /*DB_SEARCHABLE*/,        /* searchable */
        null,               /* unsigned_attribute */
        'nchar'             /* local_type_name */
        )   

    /* Local NVarChar */
    insert into spt_provider_types values
        (
        0,              /* ss_dtype */
        null,               /* fixlen */
        'nvarchar',         /* type_name */
        130 /*DBTYPE_WSTR*/,        /* oledb_data_type */
        1,              /* best_match */
        null,               /* is_nullable */
        @ncase_sensitive,       /* case_sensitive */
        0,              /* fixed_prec_scale */
        0,              /* is_long */
        0,              /* auto_unique_value */
        null,               /* data_precision */
        null,               /* numeric_scale */
        null,               /* column_size */
        'N''',              /* literal_prefix */
        '''',               /* literal_suffix */
        4 /*DB_SEARCHABLE*/,        /* searchable */
        null,               /* unsigned_attribute */
        'nvarchar'          /* local_type_name */
        )   

    /* Local NText */
    insert into spt_provider_types values
        (
        0,              /* ss_dtype */
        null,               /* fixlen */
        'ntext',            /* type_name */
        130 /*DBTYPE_WSTR*/,        /* oledb_data_type */
        0,              /* best_match */
        null,               /* is_nullable */
        @ncase_sensitive,       /* case_sensitive */
        0,              /* fixed_prec_scale */
        1,              /* is_long */
        0,              /* auto_unique_value */
        null,               /* data_precision */
        null,               /* numeric_scale */
        1073741823,         /* column_size */
        'N''',              /* literal_prefix */
        '''',               /* literal_suffix */
        2 /*DB_LIKE_ONLY*/,     /* searchable */
        null,               /* unsigned_attribute */
        'ntext'             /* local_type_name */
        )   

    if (charindex('8.00', @@version) > 0)
    begin
    /* Local BIGINT */
    insert into spt_provider_types values
        (
        127,                /* ss_dtype */
        8,              /* fixlen */
        'bigint',           /* type_name */
        20 /*DBTYPE_I8*/,       /* oledb_data_type */
        1,              /* best_match */
        null,               /* is_nullable */
        0,              /* case_sensitive */
        1,              /* fixed_prec_scale */
        0,              /* is_long */
        1,              /* auto_unique_value */
        19,             /* data_precision */
        null,           /* numeric_scale */
        null,           /* column_size */
        null,           /* literal_prefix */
        null,           /* literal_suffix */
        3 /*DB_ALL_EXCEPT_LIKE*/,       /* searchable */
        0,              /* unsigned_attribute */
        'bigint'        /* local_type_name */
        )

    /* sql_variant */
    insert into spt_provider_types values
        (
        98,             /* ss_dtype */
        null,           /* fixlen */
        'sql_variant',  /* type_name */
        12 /*DBTYPE_VARIANT*/,      /* oledb_data_type */
        1,              /* best_match */
        null,           /* is_nullable */
        0,              /* case_sensitive */
        0,              /* fixed_prec_scale */
        0,              /* is_long */
        0,              /* auto_unique_value */
        16,             /* data_precision sizeof(VARIANT)*/
        null,           /* numeric_scale */
        null,           /* column_size */
        null,           /* literal_prefix */
        null,           /* literal_suffix */
        3 ,                 /*DB_ALL_EXCEPT_LIKE*/
        null,           /* unsigned_attribute */
        'sql_variant'   /* local_type_name */
        )
    end


    /* data types changed in Sphinx: DO AFTER ALL TYPES INSERTED! */    
    update spt_provider_types set ss_dtype = (select xtype from systypes    where type_name like name+'%')

    end
commit tran
go
dump tran master with no_log
go
begin tran
if (charindex('7.00', @@version) = 0 and
    charindex('8.00', @@version) = 0)
    begin
    /* Local Bit */
    insert into spt_provider_types values
        (
        50 /*SQLBIT*/,          /* ss_dtype */
        0,              /* fixlen */
        'bit',              /* type_name */
        11 /*DBTYPE_BOOL*/,     /* oledb_data_type */
        1,              /* best_match */
        0,              /* is_nullable */
        0,              /* case_sensitive */
        0,              /* fixed_prec_scale */
        0,              /* is_long */
        0,              /* auto_unique_value */
        1,              /* data_precision */
        null,               /* numeric_scale */
        null,               /* column_size */
        null,               /* literal_prefix */
        null,               /* literal_suffix */
        3 /*DB_ALL_EXCEPT_LIKE*/,   /* searchable */
        null,               /* unsigned_attribute */
        'bit'               /* local_type_name */
        )   

    /* Local Timestamp */
    insert into spt_provider_types values
        (
        45 /*SQLBINARY*/,       /* ss_dtype */
        8,              /* fixlen */
        'timestamp',            /* type_name */
        128 /*DBTYPE_BYTES*/,       /* oledb_data_type */
        0,              /* best_match */
        null,               /* is_nullable */
        0,              /* case_sensitive */
        0,              /* fixed_prec_scale */
        0,              /* is_long */
        0,              /* auto_unique_value */
        null,               /* data_precision */
        null,               /* numeric_scale */
        null,               /* column_size */
        '0x',               /* literal_prefix */
        null,               /* literal_suffix */
        3 /*DB_ALL_EXCEPT_LIKE*/,   /* searchable */
        null,               /* unsigned_attribute */
        'timestamp'         /* local_type_name */
        )       
end

commit tran
go
dump tran master with no_log
go

create unique clustered index datatypeinfoclust on spt_provider_types(ss_dtype,fixlen)
go

dump tran master with no_log
go
if (charindex('6.00', @@version) > 0)
    begin
    if (exists (select * from sysobjects
        where name = 'spt_provider_types' and type = 'U '))
        begin
        drop table spt_provider_types
        dump tran master with no_log
        end
    end
go

if (charindex('7.00', @@version) = 0 and
    charindex('8.00', @@version) = 0)
begin
    print ''
    print ''
    print 'Warning:'
    print 'you are installing the stored procedures '
    print 'on a pre 8.0 SQL Server.'
    print 'Ignore the following errors.'
end
go


/* 
** (2/11/98) 
** The following SP is shared by instcat.sql and the server to add information
** related to server language collations. The server calls it at the end of
** collation change to update the catalog with the new language collations
** Everything in this SP should NOT use tempdb.  
*/

create procedure sp_add_server_sortinfo
as
-- spt_server_info has unigue clustered index on attribute_id
delete spt_server_info where attribute_id in (16,18)

--insert into spt_server_info
--  select 18,'COLLATION_SEQ',
--      'charset='+t2.name+' sort_order='+t1.name
--      +' charset_num='+rtrim(convert(char(4),t1.csid))+
--      ' sort_order_num='+rtrim(convert(char(4),t1.id))
--  from master.dbo.syscharsets t1, master.dbo.syscharsets t2, master.dbo.sysconfigures t3
--  where t1.csid=t2.id and t1.id=t3.value and t3.config in (123,1123)
declare @sortid int, @csid int, @sortname varchar(255), @attribute_value varchar(255)
declare @case_sensitive bit
declare @ncase_sensitive bit
select @case_sensitive = case when 'a' <> 'A' then 1 else 0 end
select @ncase_sensitive = case when N'a' <> N'A' then 1 else 0 end
select @sortid = value from sysconfigures where config = 1123
select @csid = csid, @sortname = name from master.dbo.syscharsets where id = @sortid
select @attribute_value = 'charset='+ name +' sort_order=' + @sortname
        + ' charset_num=' + rtrim(convert(char(4),@csid))+
        ' sort_order_num=' + rtrim(convert(char(4),@sortid))
        from syscharsets where id = @csid

insert into spt_server_info
        values (18,'COLLATION_SEQ', isnull(@attribute_value, ' '))

if @case_sensitive = 1 /* If case sensitive server */
begin
    insert into spt_server_info
        values (16,'IDENTIFIER_CASE','SENSITIVE')
end
else
begin
    insert into spt_server_info
        values (16,'IDENTIFIER_CASE','MIXED')
end


update spt_datatype_info set CASE_SENSITIVE = @case_sensitive 
    where DATA_TYPE in (-1, 1, 12) /* CHAR types */
update spt_datatype_info set CASE_SENSITIVE = @ncase_sensitive
    where DATA_TYPE in (-10, -9, -8) /* NCHAR types */
update spt_provider_types set case_sensitive = @case_sensitive 
    where oledb_data_type = 129 /*DBTYPE_STR*/
update spt_provider_types set case_sensitive = @ncase_sensitive
    where oledb_data_type = 130 /*DBTYPE_WSTR*/
/* sp_add_server_sortinfo */
go  


if (charindex('7.00', @@version) > 0)
begin
    exec sp_add_server_sortinfo
end
go

-- 8.0 version of sp_add_server_sortinfo
--
create procedure sp_add_server_sortinfo75
as
-- spt_server_info has unigue clustered index on attribute_id
    delete spt_server_info where attribute_id in (16, 18)

    declare @sortid int, @csid int, @sortname varchar(255), @attribute_value varchar(255)
    declare @case_sensitive bit
    declare @ncase_sensitive bit
    select @case_sensitive = case when 'a' <> 'A' then 1 else 0 end
    select @ncase_sensitive = case when N'a' <> N'A' then 1 else 0 end

    select @sortid = convert(int, ServerProperty('sqlsortorder')) 
    select @csid = convert(int, ServerProperty('sqlcharset')) 
    select @sortname = name from master.dbo.syscharsets where id = @sortid

    if @sortid = 0 -- Non-SQL Collations
        BEGIN
        select @attribute_value = 'charset=' 
            + name
            + ' collation=' + isnull(convert(sysname, ServerProperty('collation')), ' ')
            from syscharsets where id = @csid
        END
    else
        BEGIN
        select @attribute_value = 'charset='+ name +' sort_order=' + @sortname
            + ' charset_num=' + rtrim(convert(char(4),@csid))+
            ' sort_order_num=' + rtrim(convert(char(4),@sortid))
            from syscharsets where id = @csid
        END

    insert into spt_server_info
            values (18,'COLLATION_SEQ', isnull(@attribute_value, ' '))

    if @case_sensitive = 1 /* If case sensitive server */
    begin
        insert into spt_server_info
            values (16,'IDENTIFIER_CASE','SENSITIVE')
    end
    else
    begin
        insert into spt_server_info
            values (16,'IDENTIFIER_CASE','MIXED')
    end


    update spt_datatype_info set CASE_SENSITIVE = @case_sensitive 
        where DATA_TYPE in (-1, 1, 12) /* CHAR types */
    update spt_datatype_info set CASE_SENSITIVE = @ncase_sensitive
        where DATA_TYPE in (-10, -9, -8) /* NCHAR types */
    update spt_provider_types set case_sensitive = @case_sensitive 
        where oledb_data_type = 129 /*DBTYPE_STR*/
    update spt_provider_types set case_sensitive = @ncase_sensitive
        where oledb_data_type = 130 /*DBTYPE_WSTR*/
/* sp_add_server_info75 */
go 



if (charindex('8.00', @@version) > 0)
begin
    exec sp_add_server_sortinfo75
end
go

print ''
print 'creating sp_catalogs_rowset'
go

create procedure sp_catalogs_rowset
    (
    @catalog_name       varchar(255)
    )       
as
    select
        CATALOG_NAME    = name,
        DESCRIPTION = convert(varchar(1),null)
    from    master.dbo.sysdatabases
    where   name = @catalog_name AND has_dbaccess(name)=1
go
dump tran master with no_log
go
create procedure sp_catalogs_rowset;2
    (
    @dummy      int /* remove when Hydra bug 17032 is fixed */
    )
as
    select
        CATALOG_NAME    = name,
        DESCRIPTION = convert(varchar(1),null)
    from    master.dbo.sysdatabases
    where   has_dbaccess(name)=1
    order by 1
go
dump tran master with no_log
go

if (charindex('7.00', @@version) = 0 and
    charindex('8.00', @@version) = 0)
begin
    print ''
    print ''
    print 'Warning:'
    print 'you are installing the stored procedures '
    print 'on a pre 8.0 SQL Server.'
    print 'Ignore the following errors.'
end
else
    drop proc sp_catalogs_rowset
go

/*  Procedure for 8.0 server */
create procedure sp_catalogs_rowset
    (
    @catalog_name       sysname
    )       
as
    select
        CATALOG_NAME    = name,
        DESCRIPTION = convert(nvarchar(1),null)
    from    master.dbo.sysdatabases
    where   name = @catalog_name AND has_dbaccess(name)=1
go
dump tran master with no_log
go
create procedure sp_catalogs_rowset;2
    (
    @dummy      int /* remove when Hydra bug 17032 is fixed */
    )
as
    select
        CATALOG_NAME    = name,
        DESCRIPTION = convert(nvarchar(1),null)
    from    master.dbo.sysdatabases
    where   has_dbaccess(name)=1
    order by 1
go
dump tran master with no_log
go
create procedure sp_catalogs_rowset;5
    (
    @server_name    sysname,
    @catalog_name   sysname = NULL
    )
as
    select  CATALOG_NAME,
        DESCRIPTION
    from master.dbo.SYSREMOTE_CATALOGS ( @server_name, @catalog_name )
    where   has_dbaccess(CATALOG_NAME)=1
    order by 1
go

grant execute on sp_catalogs_rowset to public
go

dump tran master with no_log
go
if (charindex('6.00', @@version) > 0)
    begin
    if (exists (select * from sysobjects
            where name = 'sp_catalogs_rowset' and type = 'P '))
        begin
        drop procedure sp_catalogs_rowset
        dump tran master with no_log
        end
    end
go


print ''
print 'creating sp_column_privileges_rowset'
go

/*  Procedure for 6.0 and 6.5 server */
CREATE PROCEDURE sp_column_privileges_rowset
    (
    @table_name     varchar(255) = null,
    @table_schema   varchar(255) = null,
    @column_name    varchar(255) = null,
    @grantor    varchar(255) = null,
    @grantee    varchar(255) = null
    )
as
IF @table_name is not null
    BEGIN
    select
        GRANTOR     = user_name(p.grantor),
        GRANTEE     = user_name(u.uid),
        TABLE_CATALOG   = db_name(),
        TABLE_SCHEMA    = user_name(o.uid),
        TABLE_NAME  = o.name,
        COLUMN_NAME = c.name,
        COLUMN_GUID = convert(binary(16),null),
        COLUMN_PROPID   = convert(int,null),
        PRIVILEGE_TYPE  = convert(varchar(30),
                    case p.action
                    when 193 then 'SELECT'
                    when 195 then 'INSERT'
                    when 197 then 'UPDATE'
                    else 'REFERENCES'
                    end),
        IS_GRANTABLE    = convert(bit,case when p.protecttype = 205 then 0 else 1 end)
    from 
        sysprotects p, sysobjects o, sysusers u, master.dbo.spt_values v, syscolumns c
    where
        o.name = @table_name
    and     o.type in ('U','V','S')
    and (@table_schema is null or @table_schema = user_name(o.uid))
    and c.id = o.id
    and     (@column_name is null or @column_name = c.name)
    and     c.id = p.id
    and (@grantor is null or @grantor = user_name(p.grantor))
    and     case 
            when substring(p.columns, 1, 1) & 1 is null then 255    /* all columns have permission */
            when substring(p.columns, 1, 1) & 1 = 0 then convert(tinyint, substring(p.columns, v.low, 1))
            else (~convert(tinyint, coalesce(substring(p.columns, v.low, 1),0)))
            end & v.high <> 0           /* permission applies to this column */
    and     v.number <= (select count(*) from syscolumns where id = o.id)   /* ranges from 1 to # of columns in table */
    and     v.type = 'P'
    and     v.number = c.colid
    and (@grantee is null or @grantee = user_name(u.uid))
            /* expand groups */
    and     ((p.uid = u.uid and u.uid <> u.gid) or (p.uid = u.gid and u.uid <> u.gid))
    and     p.protecttype <> 206    /* only grant rows */
    and     p.action in (26,193,195,197)
    and     o.uid <> u.uid          /* no rows for owner */
    and     not exists (            /* exclude revoke'd privileges */
            select *
            from sysprotects p1
            where
                p1.protecttype = 206
            and     p1.action = p.action
            and     p1.id = p.id
            and     p1.uid = u.uid
            and     case 
                when substring(p1.columns, 1, 1) & 1 is null then 255   /* all columns have permission */
                when substring(p1.columns, 1, 1) & 1 = 0 then convert(tinyint, substring(p1.columns, v.low, 1))
                                else (~convert(tinyint,coalesce(substring(p.columns, v.low, 1),0)))
                end & v.high <> 0)          /* permission applies to this column */
    union
    select  /*  Add rows for table owner */
        GRANTOR     = user_name(u.uid),
        GRANTEE     = user_name(o.uid),
        TABLE_CATALOG   = db_name(),
        TABLE_SCHEMA    = user_name(o.uid),
        TABLE_NAME  = o.name,
        COLUMN_NAME = c.name,
        COLUMN_GUID = convert(binary(16),null),
        COLUMN_PROPID   = convert(int,null),
        PRIVILEGE_TYPE  = convert(varchar(30),
                    case v.number
                    when 193 then 'SELECT'
                    when 195 then 'INSERT'
                    when 197 then 'UPDATE'
                    else 'REFERENCES'
                    end),
        IS_GRANTABLE    = convert(bit,1)    
    from 
        sysobjects o, master.dbo.spt_values v, sysusers u, syscolumns c
    where
        o.name = @table_name
    and     o.type in ('U','V','S')
    and (@table_schema is null or @table_schema = user_name(o.uid))
    and (@grantee is null or @grantee = user_name(o.uid))
    and c.id = o.id
    and     (@column_name is null or @column_name = c.name)
    and     u.uid = 1       /* grantor is dbo of database */
    and (@grantor is null or @grantor = user_name(u.uid))
    and     v.type = 'P'        /* cross product to get all exposed privileges */
    and     v.number in (26,193,195,197)
    and     not exists (        /* exclude revoke'd privileges */
            select *
            from    sysprotects p1
            where   p1.protecttype = 206
            and     p1.action = v.number
            and     p1.id = o.id
            and     p1.uid = o.uid)
    order by 4, 5, 6, 9, 1, 2
    END
ELSE
    BEGIN
    select
        GRANTOR     = user_name(p.grantor),
        GRANTEE     = user_name(u.uid),
        TABLE_CATALOG   = db_name(),
        TABLE_SCHEMA    = user_name(o.uid),
        TABLE_NAME  = o.name,
        COLUMN_NAME = c.name,
        COLUMN_GUID = convert(binary(16),null),
        COLUMN_PROPID   = convert(int,null),
        PRIVILEGE_TYPE  = convert(varchar(30),
                    case p.action
                    when 193 then 'SELECT'
                    when 195 then 'INSERT'
                    when 197 then 'UPDATE'
                    else 'REFERENCES'
                    end),
        IS_GRANTABLE    = convert(bit,case when p.protecttype = 205 then 0 else 1 end)
    from 
        sysprotects p, sysobjects o, sysusers u, master.dbo.spt_values v, syscolumns c
    where
        o.type in ('U','V','S')
    and (@table_schema is null or @table_schema = user_name(o.uid))
    and c.id = o.id
    and     (@column_name is null or @column_name = c.name)
    and     c.id = p.id
    and (@grantor is null or @grantor = user_name(p.grantor))
    and     case 
            when substring(p.columns, 1, 1) & 1 is null then 255    /* all columns have permission */
            when substring(p.columns, 1, 1) & 1 = 0 then convert(tinyint, substring(p.columns, v.low, 1))
            else (~convert(tinyint, coalesce(substring(p.columns, v.low, 1),0)))
            end & v.high <> 0           /* permission applies to this column */
    and     v.number <= (select count(*) from syscolumns where id = o.id)   /* ranges from 1 to # of columns in table */
    and     v.type = 'P'
    and     v.number = c.colid
    and (@grantee is null or @grantee = user_name(u.uid))
            /* expand groups */
    and     ((p.uid = u.uid and u.uid <> u.gid) or (p.uid = u.gid and u.uid <> u.gid))
    and     p.protecttype <> 206    /* only grant rows */
    and     p.action in (26,193,195,197)
    and     o.uid <> u.uid          /* no rows for owner */
    and     not exists (            /* exclude revoke'd privileges */
            select *
            from sysprotects p1
            where
                p1.protecttype = 206
            and     p1.action = p.action
            and     p1.id = p.id
            and     p1.uid = u.uid
            and     case 
                when substring(p1.columns, 1, 1) & 1 is null then 255   /* all columns have permission */
                when substring(p1.columns, 1, 1) & 1 = 0 then convert(tinyint, substring(p1.columns, v.low, 1))
                                else (~convert(tinyint,coalesce(substring(p.columns, v.low, 1),0)))
                end & v.high <> 0)          /* permission applies to this column */
    union
    select  /*  Add rows for table owner */
        GRANTOR     = user_name(u.uid),
        GRANTEE     = user_name(o.uid),
        TABLE_CATALOG   = db_name(),
        TABLE_SCHEMA    = user_name(o.uid),
        TABLE_NAME  = o.name,
        COLUMN_NAME = c.name,
        COLUMN_GUID = convert(binary(16),null),
        COLUMN_PROPID   = convert(int,null),
        PRIVILEGE_TYPE  = convert(varchar(30),
                    case v.number
                    when 193 then 'SELECT'
                    when 195 then 'INSERT'
                    when 197 then 'UPDATE'
                    else 'REFERENCES'
                    end),
        IS_GRANTABLE    = convert(bit,1)    
    from 
        sysobjects o, master.dbo.spt_values v, sysusers u, syscolumns c
    where
        o.type in ('U','V','S')
    and (@table_schema is null or @table_schema = user_name(o.uid))
    and (@grantee is null or @grantee = user_name(o.uid))
    and c.id = o.id
    and     (@column_name is null or @column_name = c.name)
    and     u.uid = 1       /* grantor is dbo of database */
    and (@grantor is null or @grantor = user_name(u.uid))
    and     v.type = 'P'        /* cross product to get all exposed privileges */
    and     v.number in (26,193,195,197)
    and     not exists (        /* exclude revoke'd privileges */
            select *
            from    sysprotects p1
            where   p1.protecttype = 206
            and     p1.action = v.number
            and     p1.id = o.id
            and     p1.uid = o.uid)
    order by 4, 5, 6, 9, 1, 2
    END
go
dump tran master with no_log
go
CREATE PROCEDURE sp_column_privileges_rowset;2
    (
    @handle     int output,
    @scrollopt  int output,
    @ccopt      int output,
    @rows       int output,
    @table_name     varchar(255) = null,
    @table_schema   varchar(255) = null,
    @column_name    varchar(255) = null,
    @grantor    varchar(255) = null,
    @grantee    varchar(255) = null
    )
as

declare @ret int

SET NOCOUNT ON
    
create table #spcprivsrowset1
    (
    GRANTOR     sysname not null,
    GRANTEE     sysname not null,
    TABLE_CATALOG   sysname not null,
    TABLE_SCHEMA    sysname not null,
    TABLE_NAME  sysname not null,
    COLUMN_NAME sysname not null,
    COLUMN_GUID binary(16) null,
    COLUMN_PROPID   int null,
    PRIVILEGE_TYPE  sysname not null,
    IS_GRANTABLE    bit not null
    )

IF @table_name is not null
    BEGIN
    insert into #spcprivsrowset1
    select
        GRANTOR     = user_name(p.grantor),
        GRANTEE     = user_name(u.uid),
        TABLE_CATALOG   = db_name(),
        TABLE_SCHEMA    = user_name(o.uid),
        TABLE_NAME  = o.name,
        COLUMN_NAME = c.name,
        COLUMN_GUID = convert(binary(16),null),
        COLUMN_PROPID   = convert(int,null),
        PRIVILEGE_TYPE  = convert(varchar(30),
                    case p.action
                    when 193 then 'SELECT'
                    when 195 then 'INSERT'
                    when 197 then 'UPDATE'
                    else 'REFERENCES'
                    end),
        IS_GRANTABLE    = convert(bit,case when p.protecttype = 205 then 0 else 1 end)
    from 
        sysprotects p, sysobjects o, sysusers u, master.dbo.spt_values v, syscolumns c
    where
        o.name = @table_name
    and     o.type in ('U','V','S')
    and (@table_schema is null or @table_schema = user_name(o.uid))
    and c.id = o.id
    and     (@column_name is null or @column_name = c.name)
    and     c.id = p.id
    and (@grantor is null or @grantor = user_name(p.grantor))
    and     case 
            when substring(p.columns, 1, 1) & 1 is null then 255    /* all columns have permission */
            when substring(p.columns, 1, 1) & 1 = 0 then convert(tinyint, substring(p.columns, v.low, 1))
            else (~convert(tinyint, coalesce(substring(p.columns, v.low, 1),0)))
            end & v.high <> 0           /* permission applies to this column */
    and     v.number <= (select count(*) from syscolumns where id = o.id)   /* ranges from 1 to # of columns in table */
    and     v.type = 'P'
    and     v.number = c.colid
    and (@grantee is null or @grantee = user_name(u.uid))
            /* expand groups */
    and     ((p.uid = u.uid and u.uid <> u.gid) or (p.uid = u.gid and u.uid <> u.gid))
    and     p.protecttype <> 206    /* only grant rows */
    and     p.action in (26,193,195,197)
    and     o.uid <> u.uid          /* no rows for owner */
    and     not exists (            /* exclude revoke'd privileges */
            select *
            from sysprotects p1
            where
                p1.protecttype = 206
            and     p1.action = p.action
            and     p1.id = p.id
            and     p1.uid = u.uid
            and     case 
                when substring(p1.columns, 1, 1) & 1 is null then 255   /* all columns have permission */
                when substring(p1.columns, 1, 1) & 1 = 0 then convert(tinyint, substring(p1.columns, v.low, 1))
                                else (~convert(tinyint,coalesce(substring(p.columns, v.low, 1),0)))
                end & v.high <> 0)          /* permission applies to this column */
    union
    select  /*  Add rows for table owner */
        GRANTOR     = user_name(u.uid),
        GRANTEE     = user_name(o.uid),
        TABLE_CATALOG   = db_name(),
        TABLE_SCHEMA    = user_name(o.uid),
        TABLE_NAME  = o.name,
        COLUMN_NAME = c.name,
        COLUMN_GUID = convert(binary(16),null),
        COLUMN_PROPID   = convert(int,null),
        PRIVILEGE_TYPE  = convert(varchar(30),
                    case v.number
                    when 193 then 'SELECT'
                    when 195 then 'INSERT'
                    when 197 then 'UPDATE'
                    else 'REFERENCES'
                    end),
        IS_GRANTABLE    = convert(bit,1)    
    from 
        sysobjects o, master.dbo.spt_values v, sysusers u, syscolumns c
    where
        o.name = @table_name
    and     o.type in ('U','V','S')
    and (@table_schema is null or @table_schema = user_name(o.uid))
    and (@grantee is null or @grantee = user_name(o.uid))
    and c.id = o.id
    and     (@column_name is null or @column_name = c.name)
    and     u.uid = 1       /* grantor is dbo of database */
    and (@grantor is null or @grantor = user_name(u.uid))
    and     v.type = 'P'        /* cross product to get all exposed privileges */
    and     v.number in (26,193,195,197)
    and     not exists (        /* exclude revoke'd privileges */
            select *
            from    sysprotects p1
            where   p1.protecttype = 206
            and     p1.action = v.number
            and     p1.id = o.id
            and     p1.uid = o.uid)
    order by 4, 5, 6, 9, 1, 2
    END
ELSE
    BEGIN
    insert into #spcprivsrowset1
    select
        GRANTOR     = user_name(p.grantor),
        GRANTEE     = user_name(u.uid),
        TABLE_CATALOG   = db_name(),
        TABLE_SCHEMA    = user_name(o.uid),
        TABLE_NAME  = o.name,
        COLUMN_NAME = c.name,
        COLUMN_GUID = convert(binary(16),null),
        COLUMN_PROPID   = convert(int,null),
        PRIVILEGE_TYPE  = convert(varchar(30),
                    case p.action
                    when 193 then 'SELECT'
                    when 195 then 'INSERT'
                    when 197 then 'UPDATE'
                    else 'REFERENCES'
                    end),
        IS_GRANTABLE    = convert(bit,case when p.protecttype = 205 then 0 else 1 end)
    from 
        sysprotects p, sysobjects o, sysusers u, master.dbo.spt_values v, syscolumns c
    where
        o.type in ('U','V','S')
    and (@table_schema is null or @table_schema = user_name(o.uid))
    and c.id = o.id
    and     (@column_name is null or @column_name = c.name)
    and     c.id = p.id
    and (@grantor is null or @grantor = user_name(p.grantor))
    and     case 
            when substring(p.columns, 1, 1) & 1 is null then 255    /* all columns have permission */
            when substring(p.columns, 1, 1) & 1 = 0 then convert(tinyint, substring(p.columns, v.low, 1))
            else (~convert(tinyint, coalesce(substring(p.columns, v.low, 1),0)))
            end & v.high <> 0           /* permission applies to this column */
    and     v.number <= (select count(*) from syscolumns where id = o.id)   /* ranges from 1 to # of columns in table */
    and     v.type = 'P'
    and     v.number = c.colid
    and (@grantee is null or @grantee = user_name(u.uid))
            /* expand groups */
    and     ((p.uid = u.uid and u.uid <> u.gid) or (p.uid = u.gid and u.uid <> u.gid))
    and     p.protecttype <> 206    /* only grant rows */
    and     p.action in (26,193,195,197)
    and     o.uid <> u.uid          /* no rows for owner */
    and     not exists (            /* exclude revoke'd privileges */
            select *
            from sysprotects p1
            where
                p1.protecttype = 206
            and     p1.action = p.action
            and     p1.id = p.id
            and     p1.uid = u.uid
            and     case 
                when substring(p1.columns, 1, 1) & 1 is null then 255   /* all columns have permission */
                when substring(p1.columns, 1, 1) & 1 = 0 then convert(tinyint, substring(p1.columns, v.low, 1))
                                else (~convert(tinyint,coalesce(substring(p.columns, v.low, 1),0)))
                end & v.high <> 0)          /* permission applies to this column */
    union
    select  /*  Add rows for table owner */
        GRANTOR     = user_name(u.uid),
        GRANTEE     = user_name(o.uid),
        TABLE_CATALOG   = db_name(),
        TABLE_SCHEMA    = user_name(o.uid),
        TABLE_NAME  = o.name,
        COLUMN_NAME = c.name,
        COLUMN_GUID = convert(binary(16),null),
        COLUMN_PROPID   = convert(int,null),
        PRIVILEGE_TYPE  = convert(varchar(30),
                    case v.number
                    when 193 then 'SELECT'
                    when 195 then 'INSERT'
                    when 197 then 'UPDATE'
                    else 'REFERENCES'
                    end),
        IS_GRANTABLE    = convert(bit,1)    
    from 
        sysobjects o, master.dbo.spt_values v, sysusers u, syscolumns c
    where
        o.type in ('U','V','S')
    and (@table_schema is null or @table_schema = user_name(o.uid))
    and (@grantee is null or @grantee = user_name(o.uid))
    and c.id = o.id
    and     (@column_name is null or @column_name = c.name)
    and     u.uid = 1       /* grantor is dbo of database */
    and (@grantor is null or @grantor = user_name(u.uid))
    and     v.type = 'P'        /* cross product to get all exposed privileges */
    and     v.number in (26,193,195,197)
    and     not exists (        /* exclude revoke'd privileges */
            select *
            from    sysprotects p1
            where   p1.protecttype = 206
            and     p1.action = v.number
            and     p1.id = o.id
            and     p1.uid = o.uid)
    order by 4, 5, 6, 9, 1, 2
    END

exec @ret = sp_cursoropen @handle output, 'select * from #spcprivsrowset1',
    @scrollopt output, @ccopt output, @rows output

drop table #spcprivsrowset1

return isnull(@ret,0)
go
dump tran master with no_log
go
CREATE PROCEDURE sp_column_privileges_rowset;3
as
    select
        GRANTOR     = convert(sysname,' '),
        GRANTEE     = convert(sysname,' '),
        TABLE_CATALOG   = convert(sysname,' '),
        TABLE_SCHEMA    = convert(sysname,' '),
        TABLE_NAME  = convert(sysname,' '),
        COLUMN_NAME = convert(sysname,' '),
        COLUMN_GUID = convert(binary(16),null),
        COLUMN_PROPID   = convert(int,null),
        PRIVILEGE_TYPE  = convert(varchar(30),' '),
        IS_GRANTABLE    = convert(bit,1)
    where   1=0
go
dump tran master with no_log
go

if (charindex('7.00', @@version) = 0 and
    charindex('8.00', @@version) = 0)
begin
    print ''
    print ''
    print 'Warning:'
    print 'you are installing the stored procedures '
    print 'on a pre 8.0 SQL Server.'
    print 'Ignore the following errors.'
end
else
    drop proc sp_column_privileges_rowset
go


/*  Procedure for 8.0 server */
CREATE PROCEDURE sp_column_privileges_rowset
    (
    @table_name         sysname,
    @table_schema       sysname = null,
    @column_name        sysname = null,
    @grantor        sysname = null,
    @grantee        sysname = null
    )
as
    select
        GRANTOR     = user_name(p.grantor),
        GRANTEE     = user_name(u.uid),
        TABLE_CATALOG   = db_name(),
        TABLE_SCHEMA    = user_name(o.uid),
        TABLE_NAME  = o.name,
        COLUMN_NAME = c.name,
        COLUMN_GUID = convert(uniqueidentifier,null),
        COLUMN_PROPID   = convert(int,null),
        PRIVILEGE_TYPE  = convert(nvarchar(30),
                    case p.action
                    when 193 then N'SELECT'
                    when 195 then N'INSERT'
                    when 197 then N'UPDATE'
                    else N'REFERENCES'
                    end),
        IS_GRANTABLE    = convert(bit,case when p.protecttype = 205 then 0 else 1 end)
    from 
        sysprotects p, sysobjects o, sysusers u, master.dbo.spt_values v, syscolumns c, sysmembers m
    where
        o.name = @table_name
    and     o.type in ('U','V','S')
    and (@table_schema is null or @table_schema = user_name(o.uid))
    and c.id = o.id
    and     (@column_name is null or @column_name = c.name)
    and     c.id = p.id
    and (@grantor is null or @grantor = user_name(p.grantor))
    and     case 
            when substring(p.columns, 1, 1) & 1 is null then 255    /* all columns have permission */
            when substring(p.columns, 1, 1) & 1 = 0 then convert(tinyint, substring(p.columns, v.low, 1))
            else (~convert(tinyint, coalesce(substring(p.columns, v.low, 1),0)))
            end & v.high <> 0           /* permission applies to this column */
    and     v.number <= (select count(*) from syscolumns where id = o.id)   /* ranges from 1 to # of columns in table */
    and     v.type = 'P'
    and     v.number = c.colid
    and (@grantee is null or @grantee = user_name(u.uid))
        /* expand groups - AKUNDONE: only 1 level of group unrolling here. Need more?? */
    and     (u.uid > 0 and u.uid < 16384)
    and     ((p.uid = u.uid) or  (p.uid = m.groupuid and u.uid = m.memberuid))  
    and     p.protecttype <> 206    /* only grant rows */
    and     p.action in (26,193,195,197)
    and     o.uid <> u.uid          /* no rows for owner */
    and     not exists (            /* exclude revoke'd privileges */
            select *
            from sysprotects p1
            where
                p1.protecttype = 206
            and     p1.action = p.action
            and     p1.id = p.id
            and     p1.uid = u.uid
            and     case 
                when substring(p1.columns, 1, 1) & 1 is null then 255   /* all columns have permission */
                when substring(p1.columns, 1, 1) & 1 = 0 then convert(tinyint, substring(p1.columns, v.low, 1))
                                else (~convert(tinyint,coalesce(substring(p.columns, v.low, 1),0)))
                end & v.high <> 0)          /* permission applies to this column */
    union
    select  /*  Add rows for table owner */
        GRANTOR     = user_name(u.uid),
        GRANTEE     = user_name(o.uid),
        TABLE_CATALOG   = db_name(),
        TABLE_SCHEMA    = user_name(o.uid),
        TABLE_NAME  = o.name,
        COLUMN_NAME = c.name,
        COLUMN_GUID = convert(uniqueidentifier,null),
        COLUMN_PROPID   = convert(int,null),
        PRIVILEGE_TYPE  = convert(nvarchar(30),
                    case v.number
                    when 193 then N'SELECT'
                    when 195 then N'INSERT'
                    when 197 then N'UPDATE'
                    else N'REFERENCES'
                    end),
        IS_GRANTABLE    = convert(bit,1)    
    from 
        sysobjects o, master.dbo.spt_values v, sysusers u, syscolumns c
    where
        o.name = @table_name
    and     o.type in ('U','V','S')
    and (@table_schema is null or @table_schema = user_name(o.uid))
    and (@grantee is null or @grantee = user_name(o.uid))
    and c.id = o.id
    and     (@column_name is null or @column_name = c.name)
    and     u.uid = 1       /* grantor is dbo of database */
    and (@grantor is null or @grantor = user_name(u.uid))
    and     v.type = 'P'        /* cross product to get all exposed privileges */
    and     v.number in (26,193,195,197)
    and     not exists (        /* exclude revoke'd privileges */
            select *
            from    sysprotects p1
            where   p1.protecttype = 206
            and     p1.action = v.number
            and     p1.id = o.id
            and     p1.uid = o.uid)
    order by 4, 5, 6, 9, 1, 2
go
dump tran master with no_log
go
CREATE PROCEDURE sp_column_privileges_rowset;2
    (
    @table_schema       sysname = null,
    @column_name        sysname = null,
    @grantor        sysname = null,
    @grantee        sysname = null
    )
as
    select
        GRANTOR     = user_name(p.grantor),
        GRANTEE     = user_name(u.uid),
        TABLE_CATALOG   = db_name(),
        TABLE_SCHEMA    = user_name(o.uid),
        TABLE_NAME  = o.name,
        COLUMN_NAME = c.name,
        COLUMN_GUID = convert(uniqueidentifier,null),
        COLUMN_PROPID   = convert(int,null),
        PRIVILEGE_TYPE  = convert(nvarchar(30),
                    case p.action
                    when 193 then N'SELECT'
                    when 195 then N'INSERT'
                    when 197 then N'UPDATE'
                    else N'REFERENCES'
                    end),
        IS_GRANTABLE    = convert(bit,case when p.protecttype = 205 then 0 else 1 end)
    from 
        sysprotects p, sysobjects o, sysusers u, master.dbo.spt_values v, syscolumns c, sysmembers m
    where
        o.type in ('U','V','S')
    and (@table_schema is null or @table_schema = user_name(o.uid))
    and c.id = o.id
    and     (@column_name is null or @column_name = c.name)
    and     c.id = p.id
    and (@grantor is null or @grantor = user_name(p.grantor))
    and     case 
            when substring(p.columns, 1, 1) & 1 is null then 255    /* all columns have permission */
            when substring(p.columns, 1, 1) & 1 = 0 then convert(tinyint, substring(p.columns, v.low, 1))
            else (~convert(tinyint, coalesce(substring(p.columns, v.low, 1),0)))
            end & v.high <> 0           /* permission applies to this column */
    and     v.number <= (select count(*) from syscolumns where id = o.id)   /* ranges from 1 to # of columns in table */
    and     v.type = 'P'
    and     v.number = c.colid
    and (@grantee is null or @grantee = user_name(u.uid))
        /* expand groups - AKUNDONE: only 1 level of group unrolling here. Need more?? */
    and     (u.uid > 0 and u.uid < 16384)
    and     ((p.uid = u.uid) or  (p.uid = m.groupuid and u.uid = m.memberuid))  
    and     p.protecttype <> 206    /* only grant rows */
    and     p.action in (26,193,195,197)
    and     o.uid <> u.uid          /* no rows for owner */
    and     not exists (            /* exclude revoke'd privileges */
            select *
            from sysprotects p1
            where
                p1.protecttype = 206
            and     p1.action = p.action
            and     p1.id = p.id
            and     p1.uid = u.uid
            and     case 
                when substring(p1.columns, 1, 1) & 1 is null then 255   /* all columns have permission */
                when substring(p1.columns, 1, 1) & 1 = 0 then convert(tinyint, substring(p1.columns, v.low, 1))
                                else (~convert(tinyint,coalesce(substring(p.columns, v.low, 1),0)))
                end & v.high <> 0)          /* permission applies to this column */
    union
    select  /*  Add rows for table owner */
        GRANTOR     = user_name(u.uid),
        GRANTEE     = user_name(o.uid),
        TABLE_CATALOG   = db_name(),
        TABLE_SCHEMA    = user_name(o.uid),
        TABLE_NAME  = o.name,
        COLUMN_NAME = c.name,
        COLUMN_GUID = convert(uniqueidentifier,null),
        COLUMN_PROPID   = convert(int,null),
        PRIVILEGE_TYPE  = convert(nvarchar(30),
                    case v.number
                    when 193 then N'SELECT'
                    when 195 then N'INSERT'
                    when 197 then N'UPDATE'
                    else N'REFERENCES'
                    end),
        IS_GRANTABLE    = convert(bit,1)    
    from 
        sysobjects o, master.dbo.spt_values v, sysusers u, syscolumns c
    where
        o.type in ('U','V','S')
    and (@table_schema is null or @table_schema = user_name(o.uid))
    and (@grantee is null or @grantee = user_name(o.uid))
    and c.id = o.id
    and     (@column_name is null or @column_name = c.name)
    and     u.uid = 1       /* grantor is dbo of database */
    and (@grantor is null or @grantor = user_name(u.uid))
    and     v.type = 'P'        /* cross product to get all exposed privileges */
    and     v.number in (26,193,195,197)
    and     not exists (        /* exclude revoke'd privileges */
            select *
            from    sysprotects p1
            where   p1.protecttype = 206
            and     p1.action = v.number
            and     p1.id = o.id
            and     p1.uid = o.uid)
    order by 4, 5, 6, 9, 1, 2
go
dump tran master with no_log
go
create procedure sp_column_privileges_rowset;5
    (
    @table_server       sysname,
    @table_catalog      sysname = null,
    @table_name     sysname = null,
    @table_schema       sysname = null,
    @column_name        sysname = null,
    @grantor        sysname = null,
    @grantee        sysname = null
    )
as
    select
        GRANTOR,
        GRANTEE,
        TABLE_CATALOG,
        TABLE_SCHEMA,
        TABLE_NAME,
        COLUMN_NAME,
        COLUMN_GUID,
        COLUMN_PROPID,  
        PRIVILEGE_TYPE,
        IS_GRANTABLE    
        from master.dbo.SYSREMOTE_COLUMN_PRIVILEGES (
                @table_server,
                @table_catalog,
                @table_schema,
                @table_name,
                @column_name,
                @grantor,
                @grantee )
    order by 3, 4, 5, 6, 9, 1, 2
go

grant execute on sp_column_privileges_rowset to public
go

dump tran master with no_log
go
if (charindex('6.00', @@version) > 0)
    begin
    if (exists (select * from sysobjects
            where name = 'sp_column_privileges_rowset' and type = 'P '))
        begin
        drop procedure sp_column_privileges_rowset
        dump tran master with no_log
        end
    end
go


print ''
print 'creating sp_columns_rowset'
go

/*  Procedure for 6.0 and 6.50 server */
create procedure sp_columns_rowset
    (
    @table_name varchar(255),
    @table_schema   varchar(255) = null,
    @column_name    varchar(255) = null
    )
as  
    select
        TABLE_CATALOG       = db_name(),
        TABLE_SCHEMA        = user_name(o.uid),
        TABLE_NAME      = o.name,
        COLUMN_NAME     = c.name,
        COLUMN_GUID     = convert(binary(16),null),
        COLUMN_PROPID       = convert(int,null),
        ORDINAL_POSITION    = convert(int,
                       (
                        select count(*)
                        from syscolumns sc
                        where sc.id     =  c.id
                          AND sc.number =  c.number
                          AND sc.colid  <= c.colid
                        )),
        COLUMN_HASDEFAULT   = convert(bit, case when m.text is null then 0 else 1 end),

        COLUMN_DEFAULT      = convert (varchar (255),
                                  case when substring(m.text,1,1) = '('
                                  then substring(m.text,2,datalength(m.text)-2)
                                  else substring(m.text,1,datalength(m.text)-2)
                              end), 
        COLUMN_FLAGS        = convert(int,
                        case when d.is_long = 1 
                        then 0x82 /*DBCOLUMNFLAGS_ISLONG|DBCOLUMNFLAGS_MAYDEFER*/
                        else 0
                        end
                    |   case when d.fixlen is not null
                        then 0x10 /*DBCOLUMNFLAGS_ISFIXEDLENGTH*/
                        else 0
                        end
                    |   case when c.status&8 = 8
                        then 0x60 /*DBCOLUMNFLAGS_ISNULLABLE|DBCOLUMNFLAGS_MAYBENULL*/
                        else 0
                        end
                    |   case 
                        when d.type_name = 'timestamp'
                            then 0x200 /*DBCOLUMNFLAGS_ISROWVER*/
                        when (c.status&128) != 128
                            then 0x8 /*DBCOLUMNFLAGS_WRITEUNKNOWN*/ 
                        else 0 
                        end),
        IS_NULLABLE     = convert(bit,c.status&8),
        DATA_TYPE       = d.oledb_data_type,
        TYPE_GUID       = convert(binary(16),null),
        CHARACTER_MAXIMUM_LENGTH= convert(int,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/ 
                            or d.oledb_data_type = 128 /*DBTYPE_BYTES*/
                        then coalesce(d.column_size,c.length)
                        else null 
                        end),
        CHARACTER_OCTET_LENGTH  = convert(int,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/ 
                            or d.oledb_data_type = 128 /*DBTYPE_BYTES*/
                        then coalesce(d.column_size,c.length)
                        else null 
                        end),
        NUMERIC_PRECISION   = convert(smallint,
                        case when d.oledb_data_type = 131 /*DBTYPE_NUMERIC*/ then c.prec
                            when (d.fixed_prec_scale =1  or d.oledb_data_type =5 or d.oledb_data_type =4)
                                    then d.data_precision else null end),
        NUMERIC_SCALE       = convert(smallint, 
                        case when d.oledb_data_type = 131 /*DBTYPE_NUMERIC*/ then c.scale else null end),
        DATETIME_PRECISION  = convert(int,
                        case when d.oledb_data_type <> 135 /*DBTYPE_DBTIMESTAMP*/ then null
                            when data_precision = 23 then 3 else 0 end),
        CHARACTER_SET_CATALOG   = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then 'master' 
                        else null 
                        end),
        CHARACTER_SET_SCHEMA    = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then 'dbo' 
                        else null 
                        end),
        CHARACTER_SET_NAME  = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then a_cha.name 
                        else null 
                        end),
        COLLATION_CATALOG   = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then 'master' 
                        else null 
                        end),
        COLLATION_SCHEMA    = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then 'dbo' 
                        else null 
                        end),
        COLLATION_NAME      = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then b_cha.name 
                        else null 
                        end),
        DOMAIN_CATALOG      = case when t.usertype < 256 then null else db_name() end,
        DOMAIN_SCHEMA       = case when t.usertype < 256 then null else user_name(o.uid) end,
        DOMAIN_NAME     = case when t.usertype < 256 then null else t.name end,
        DESCRIPTION     = convert(varchar(1),null)  
    
    from
        syscolumns c,
        syscomments m,
        sysobjects o,
        master.dbo.spt_provider_types d,
        systypes t,
        sysusers u,
        master.dbo.sysconfigures    cfg,
        master.dbo.syscharsets      a_cha, /* charset/1001, not sortorder. */
        master.dbo.syscharsets      b_cha  /* sortorder/2001, not charset. */
    where
        o.name = @table_name
    and     o.type in ('U','V','S')
    and     u.uid = user_id() /* constrain sysusers uid for use in subquery */
    and     (
        suser_id() = 1   /* User is the System Administrator */
        or o.uid = user_id()     /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
           )
    and (@table_schema is null or @table_schema = user_name(o.uid))
    and (@column_name is null or @column_name = c.name)
    and     o.id = c.id
    and     t.type = d.ss_dtype
    and (t.usertype != 80 or d.type_name='timestamp')
    and     c.length = case when d.fixlen > 0 then d.fixlen else c.length end
    and     c.usertype = t.usertype
    and c.cdefault *= m.id
    and m.colid = 1
    and cfg.comment = 'default sortorder ID' 
    and a_cha.type = 1001 /* type is charset */
    and b_cha.type = 2001 /* type is sortorder */
    and a_cha.id = b_cha.csid
    and     b_cha.id = cfg.value
    order by 2, 3, c.colid
go

dump tran master with no_log
go

create procedure sp_columns_rowset;2
    (
    @table_schema   varchar(255) = null,
    @column_name    varchar(255) = null
    )
as  
    select
        TABLE_CATALOG       = db_name(),
        TABLE_SCHEMA        = user_name(o.uid),
        TABLE_NAME      = o.name,
        COLUMN_NAME     = c.name,
        COLUMN_GUID     = convert(binary(16),null),
        COLUMN_PROPID       = convert(int,null),
        ORDINAL_POSITION    = convert(int,
                       (
                        select count(*)
                        from syscolumns sc
                        where sc.id     =  c.id
                          AND sc.number =  c.number
                          AND sc.colid  <= c.colid
                        )),
        COLUMN_HASDEFAULT   = convert(bit, case when m.text is null then 0 else 1 end),
        COLUMN_DEFAULT      = convert (varchar (255),
                                  case when substring(m.text,1,1) = '('
                                  then substring(m.text,2,datalength(m.text)-2)
                                  else substring(m.text,1,datalength(m.text)-2)
                              end), 
        COLUMN_FLAGS        = convert(int,
                        case when d.is_long = 1 
                        then 0x82 /*DBCOLUMNFLAGS_ISLONG|DBCOLUMNFLAGS_MAYDEFER*/
                        else 0
                        end
                    |   case when d.fixlen is not null
                        then 0x10 /*DBCOLUMNFLAGS_ISFIXEDLENGTH*/
                        else 0
                        end
                    |   case when c.status&8 = 8
                        then 0x60 /*DBCOLUMNFLAGS_ISNULLABLE|DBCOLUMNFLAGS_MAYBENULL*/
                        else 0
                        end
                    |   case 
                        when d.type_name = 'timestamp'
                            then 0x200 /*DBCOLUMNFLAGS_ISROWVER*/
                        when (c.status&128) != 128
                            then 0x8 /*DBCOLUMNFLAGS_WRITEUNKNOWN*/ 
                        else 0 
                        end),
        IS_NULLABLE     = convert(bit,c.status&8),
        DATA_TYPE       = d.oledb_data_type,
        TYPE_GUID       = convert(binary(16),null),
        CHARACTER_MAXIMUM_LENGTH= convert(int,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/ 
                            or d.oledb_data_type = 128 /*DBTYPE_BYTES*/
                        then coalesce(d.column_size,c.length)
                        else null 
                        end),
        CHARACTER_OCTET_LENGTH  = convert(int,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/ 
                            or d.oledb_data_type = 128 /*DBTYPE_BYTES*/
                        then coalesce(d.column_size,c.length)
                        else null 
                        end),
        NUMERIC_PRECISION   = convert(smallint,
                        case when d.oledb_data_type = 131 /*DBTYPE_NUMERIC*/ then c.prec
                            when (d.fixed_prec_scale =1  or d.oledb_data_type =5 or d.oledb_data_type =4)
                            then d.data_precision else null end),
        NUMERIC_SCALE       = convert(smallint, 
                        case when d.oledb_data_type = 131 /*DBTYPE_NUMERIC*/ then c.scale else null end),
        DATETIME_PRECISION  = convert(int,
                        case when d.oledb_data_type <> 135 /*DBTYPE_DBTIMESTAMP*/ then null
                            when data_precision = 23 then 3 else 0 end),
        CHARACTER_SET_CATALOG   = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then 'master' 
                        else null 
                        end),
        CHARACTER_SET_SCHEMA    = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then 'dbo' 
                        else null 
                        end),
        CHARACTER_SET_NAME  = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then a_cha.name 
                        else null 
                        end),
        COLLATION_CATALOG   = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then 'master' 
                        else null 
                        end),
        COLLATION_SCHEMA    = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then 'dbo' 
                        else null 
                        end),
        COLLATION_NAME      = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then b_cha.name 
                        else null 
                        end),
        DOMAIN_CATALOG      = case when t.usertype < 256 then null else db_name() end,
        DOMAIN_SCHEMA       = case when t.usertype < 256 then null else user_name(o.uid) end,
        DOMAIN_NAME     = case when t.usertype < 256 then null else t.name end,
        DESCRIPTION     = convert(varchar(1),null)  
    
    from
        syscolumns c,
        syscomments m,
        sysobjects o,
        master.dbo.spt_provider_types d,
        systypes t,
        sysusers u,
        master.dbo.sysconfigures    cfg,
        master.dbo.syscharsets      a_cha, /* charset/1001, not sortorder. */
        master.dbo.syscharsets      b_cha /* sortorder/2001, not charset. */
    where
        o.type in ('U','V','S')
    and     u.uid = user_id() /* constrain sysusers uid for use in subquery */
    and     (
        suser_id() = 1   /* User is the System Administrator */
        or o.uid = user_id()     /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
           )
    and (@table_schema is null or @table_schema = user_name(o.uid))
    and (@column_name is null or @column_name = c.name)
    and     o.id = c.id
    and     t.type = d.ss_dtype
    and (t.usertype != 80 or d.type_name='timestamp')
    and     c.length = case when d.fixlen > 0 then d.fixlen else c.length end
    and     c.usertype = t.usertype
    and c.cdefault *= m.id
    and  m.colid = 1
    and cfg.comment = 'default sortorder ID' 
    and a_cha.type = 1001 /* type is charset */
    and b_cha.type = 2001 /* type is sortorder */
    and a_cha.id = b_cha.csid
    and     b_cha.id = cfg.value
    order by 2, 3, c.colid
    
go

dump tran master with no_log
go

if (charindex('7.00', @@version) = 0 and
    charindex('8.00', @@version) = 0)
begin
    print ''
    print ''
    print 'Warning:'
    print 'you are installing the stored procedures '
    print 'on a pre 8.0 SQL Server.'
    print 'Ignore the following errors.'
end
else
    drop proc sp_columns_rowset
go

/*  Procedure for 7.0 server */
create procedure sp_columns_rowset
    (
    @table_name sysname,
    @table_schema   sysname = NULL,
    @column_name    sysname = NULL
    )
as
    select
        TABLE_CATALOG       = db_name(),
        TABLE_SCHEMA        = user_name(o.uid),
        TABLE_NAME      = o.name,
        COLUMN_NAME     = c.name,
        COLUMN_GUID     = convert(uniqueidentifier,null),
        COLUMN_PROPID       = convert(int,null),
        ORDINAL_POSITION    = convert(int,
                       (
                        select count(*)
                        from syscolumns sc
                        where sc.id     =  c.id
                          AND sc.number =  c.number
                          AND sc.colid  <= c.colid
                        )),
        COLUMN_HASDEFAULT   = convert(bit, case when m.text is null then 0 else 1 end),
        COLUMN_DEFAULT      =  convert(nvarchar(2000),
                                        case when substring(m.text,1,1) = '('
                                            then substring(m.text,2,datalength(m.text)/2-2)
                                            else substring(m.text,1,datalength(m.text)/2-2)
                                        end ), 
        COLUMN_FLAGS        = convert(int,
                        case when d.is_long = 1 
                        then 0x82 /*DBCOLUMNFLAGS_ISLONG|DBCOLUMNFLAGS_MAYDEFER*/
                        else 0
                        end
                    |   case when d.fixlen is not null
                        then 0x10 /*DBCOLUMNFLAGS_ISFIXEDLENGTH*/
                        else 0
                        end
                    |   case when ColumnProperty(c.id,c.name,'AllowsNull') = 1
                        then 0x60 /*DBCOLUMNFLAGS_ISNULLABLE|DBCOLUMNFLAGS_MAYBENULL*/
                        else 0
                        end
                    |   case 
                        when d.type_name = 'timestamp'
                            then 0x200 /*DBCOLUMNFLAGS_ISROWVER*/
                        when (c.status&128) != 128  and permissions(o.id,c.name)&2 = 2
                            then 0x4 /*DBCOLUMNFLAGS_WRITE*/ 
                        else 0 
                        end),
        IS_NULLABLE     = convert(bit,ColumnProperty(c.id,c.name,'AllowsNull')),
        DATA_TYPE       = d.oledb_data_type,
        TYPE_GUID       = convert(uniqueidentifier,null),
        CHARACTER_MAXIMUM_LENGTH= convert(int,
                        case 
                        when d.oledb_data_type = 129 /*DBTYPE_STR*/ 
                            or d.oledb_data_type = 128 /*DBTYPE_BYTES*/
                        then coalesce(d.column_size,c.length)
                        when d.oledb_data_type = 130 /*DBTYPE_WSTR*/
                        then coalesce(d.column_size,c.length/2)
                        else null 
                        end),
        CHARACTER_OCTET_LENGTH  = convert(int,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/ 
                            or d.oledb_data_type = 128 /*DBTYPE_BYTES*/
                        then coalesce(d.column_size,c.length)
                        when d.oledb_data_type = 130 /*DBTYPE_WSTR*/
                        then coalesce(d.column_size*2,c.length)
                        else null 
                        end),
        NUMERIC_PRECISION   = convert(smallint,
                        case when d.oledb_data_type = 131 /*DBTYPE_NUMERIC*/ then c.xprec
                            when (d.fixed_prec_scale =1  or d.oledb_data_type =5 or d.oledb_data_type =4)
                            then d.data_precision else null end),
        NUMERIC_SCALE       = convert(smallint, 
                        case when d.oledb_data_type = 131 /*DBTYPE_NUMERIC*/ then c.scale else null end),
        DATETIME_PRECISION  = convert(int,
                        case when d.oledb_data_type <> 135 /*DBTYPE_DBTIMESTAMP*/ then null
                            when data_precision = 23 then 3 else 0 end),
        CHARACTER_SET_CATALOG   = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then N'master' 
                        else null 
                        end),
        CHARACTER_SET_SCHEMA    = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then N'dbo' 
                        else null 
                        end),
        CHARACTER_SET_NAME  = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then a_cha.name 
                        else null 
                        end),
        COLLATION_CATALOG   = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then N'master' 
                        else null 
                        end),
        COLLATION_SCHEMA    = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then N'dbo' 
                        else null 
                        end),
        COLLATION_NAME      = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then b_cha.name 
                        else null 
                        end),
        DOMAIN_CATALOG      = case when t.usertype < 256 then null else db_name() end,
        DOMAIN_SCHEMA       = case when t.usertype < 256 then null else user_name(o.uid) end,
        DOMAIN_NAME     = case when t.usertype < 256 then null else t.name end,
        DESCRIPTION     = convert(nvarchar(1),null) 

    from
        syscolumns c left join syscomments m on c.cdefault = m.id and m.colid = 1,
        sysobjects o,
        master.dbo.spt_provider_types d,
        systypes t,
        master.dbo.sysconfigures    cfg,
        master.dbo.syscharsets      a_cha, /* charset/1001, not sortorder. */
        master.dbo.syscharsets      b_cha /* sortorder/2001, not charset. */
    where
        permissions(o.id, c.name) <> 0
    and o.name = @table_name
    and     o.type in ('U','V','S')
    and (@table_schema is null or @table_schema = user_name(o.uid))
    and (@column_name is null or @column_name = c.name)
    and     o.id = c.id
    and     t.xtype = d.ss_dtype
    and     c.length = case when d.fixlen > 0 then d.fixlen else c.length end
    and     c.xusertype = t.xusertype
    and cfg.comment = 'default sortorder id' 
    and a_cha.type = 1001 /* type is charset */
    and b_cha.type = 2001 /* type is sortorder */
    and a_cha.id = b_cha.csid
    and     b_cha.id = cfg.value
    order by 2, 3, c.colorder
go

dump tran master with no_log
go

/*  Procedure for 7.0 server */
create procedure sp_columns_rowset;2
    (
    @table_schema   sysname = NULL,
    @column_name    sysname = NULL
    )
as  
    select
        TABLE_CATALOG       = db_name(),
        TABLE_SCHEMA        = user_name(o.uid),
        TABLE_NAME      = o.name,
        COLUMN_NAME     = c.name,
        COLUMN_GUID     = convert(uniqueidentifier,null),
        COLUMN_PROPID       = convert(int,null),
        ORDINAL_POSITION    = convert(int,
                       (
                        select count(*)
                        from syscolumns sc
                        where sc.id     =  c.id
                          AND sc.number =  c.number
                          AND sc.colid  <= c.colid
                        )),
        COLUMN_HASDEFAULT   = convert(bit, case when m.text is null then 0 else 1 end),
        COLUMN_DEFAULT      =  convert(nvarchar(2000),
                                        case when substring(m.text,1,1) = '('
                                            then substring(m.text,2,datalength(m.text)/2-2)
                                            else substring(m.text,1,datalength(m.text)/2-2)
                                        end ), 
        COLUMN_FLAGS        = convert(int,
                        case when d.is_long = 1 
                        then 0x82 /*DBCOLUMNFLAGS_ISLONG|DBCOLUMNFLAGS_MAYDEFER*/
                        else 0
                        end
                    |   case when d.fixlen is not null
                        then 0x10 /*DBCOLUMNFLAGS_ISFIXEDLENGTH*/
                        else 0
                        end
                    |   case when ColumnProperty(c.id,c.name,'AllowsNull') = 1
                        then 0x60 /*DBCOLUMNFLAGS_ISNULLABLE|DBCOLUMNFLAGS_MAYBENULL*/
                        else 0
                        end
                    |   case 
                        when d.type_name = 'timestamp'
                            then 0x200 /*DBCOLUMNFLAGS_ISROWVER*/
                        when (c.status&128) != 128 and permissions(o.id,c.name)&2 = 2
                            then 0x4 /*DBCOLUMNFLAGS_WRITE*/ 
                        else 0 
                        end),
        IS_NULLABLE     = convert(bit,ColumnProperty(c.id,c.name,'AllowsNull')),
        DATA_TYPE       = d.oledb_data_type,
        TYPE_GUID       = convert(uniqueidentifier,null),
        CHARACTER_MAXIMUM_LENGTH= convert(int,
                        case 
                        when d.oledb_data_type = 129 /*DBTYPE_STR*/ 
                            or d.oledb_data_type = 128 /*DBTYPE_BYTES*/
                        then coalesce(d.column_size,c.length)
                        when d.oledb_data_type = 130 /*DBTYPE_WSTR*/
                        then coalesce(d.column_size,c.length/2)
                        else null 
                        end),
        CHARACTER_OCTET_LENGTH  = convert(int,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/ 
                            or d.oledb_data_type = 128 /*DBTYPE_BYTES*/
                        then coalesce(d.column_size,c.length)
                        when d.oledb_data_type = 130 /*DBTYPE_WSTR*/
                        then coalesce(d.column_size*2,c.length)
                        else null 
                        end),
        NUMERIC_PRECISION   = convert(smallint,
                        case when d.oledb_data_type = 131 /*DBTYPE_NUMERIC*/ then c.xprec
                            when (d.fixed_prec_scale =1  or d.oledb_data_type =5 or d.oledb_data_type =4)
                            then d.data_precision else null end),
        NUMERIC_SCALE       = convert(smallint, 
                        case when d.oledb_data_type = 131 /*DBTYPE_NUMERIC*/ then c.scale else null end),
        DATETIME_PRECISION  = convert(int,
                        case when d.oledb_data_type <> 135 /*DBTYPE_DBTIMESTAMP*/ then null
                            when data_precision = 23 then 3 else 0 end),
        CHARACTER_SET_CATALOG   = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then N'master' 
                        else null 
                        end),
        CHARACTER_SET_SCHEMA    = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then N'dbo' 
                        else null 
                        end),
        CHARACTER_SET_NAME  = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then a_cha.name 
                        else null 
                        end),
        COLLATION_CATALOG   = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then N'master' 
                        else null 
                        end),
        COLLATION_SCHEMA    = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then N'dbo' 
                        else null 
                        end),
        COLLATION_NAME      = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then b_cha.name 
                        else null 
                        end),
        DOMAIN_CATALOG      = case when t.usertype < 256 then null else db_name() end,
        DOMAIN_SCHEMA       = case when t.usertype < 256 then null else user_name(o.uid) end,
        DOMAIN_NAME     = case when t.usertype < 256 then null else t.name end,
        DESCRIPTION     = convert(nvarchar(1),null) 
    
    from
        syscolumns c left join syscomments m on c.cdefault = m.id and m.colid = 1,
        sysobjects o,
        master.dbo.spt_provider_types d,
        systypes t,
        master.dbo.sysconfigures    cfg,
        master.dbo.syscharsets      a_cha, /* charset/1001, not sortorder.*/
        master.dbo.syscharsets      b_cha /* sortorder/2001, not charset.*/
    where
        permissions(o.id, c.name) <> 0
    and     o.type in ('U','V','S')
    and (@table_schema is null or @table_schema = user_name(o.uid))
    and (@column_name is null or @column_name = c.name)
    and     o.id = c.id
    and     t.xtype = d.ss_dtype
    and     c.length = case when d.fixlen > 0 then d.fixlen else c.length end
    and     c.xusertype = t.xusertype
    and cfg.comment = 'default sortorder id' 
    and     a_cha.type = 1001 /* type is charset */
    and     b_cha.type = 2001 /* type is sortorder */
    and a_cha.id = b_cha.csid
    and     b_cha.id = cfg.value
    order by 2, 3, c.colorder
go

dump tran master with no_log
go

/*  Procedure for 7.0 server */
create procedure sp_columns_rowset;5
    (
    @table_server       sysname,
    @table_catalog      sysname = null,
    @table_name     sysname = null,
    @table_schema       sysname = null,
    @column_name        sysname = null
    )
as
    select
        TABLE_CATALOG,
        TABLE_SCHEMA,
        TABLE_NAME,
        COLUMN_NAME,
        COLUMN_GUID,
        COLUMN_PROPID,
        ORDINAL_POSITION,
        COLUMN_HASDEFAULT,
        COLUMN_DEFAULT,
        COLUMN_FLAGS,
        IS_NULLABLE,
        DATA_TYPE,
        TYPE_GUID,
        CHARACTER_MAXIMUM_LENGTH,
        CHARACTER_OCTET_LENGTH,
        NUMERIC_PRECISION,
        NUMERIC_SCALE,
        DATETIME_PRECISION,
        CHARACTER_SET_CATALOG,
        CHARACTER_SET_SCHEMA,
        CHARACTER_SET_NAME,
        COLLATION_CATALOG,
        COLLATION_SCHEMA,
        COLLATION_NAME,
        DOMAIN_CATALOG,
        DOMAIN_SCHEMA,
        DOMAIN_NAME,
        DESCRIPTION
    from master.dbo.SYSREMOTE_COLUMNS (
                @table_server,
                @table_catalog,
                @table_schema,
                @table_name,
                @column_name )
    order by 1, 2, 3, 7
go


dump tran master with no_log
go

/*  Procedure for 8.00 server */
if (charindex('8.00', @@version) = 0)
begin
    print ''
    print ''
    print 'Warning:'
    print 'you are installing the stored procedures '
    print 'on a pre 8.0 SQL Server.'
    print 'Ignore the following errors.'
end
else
    drop proc sp_columns_rowset
go

/*  Procedure for 8.00 server */
create procedure sp_columns_rowset
    (
    @table_name sysname,
    @table_schema   sysname = NULL,
    @column_name    sysname = NULL
    )
as  
    select
        TABLE_CATALOG       = db_name(),
        TABLE_SCHEMA        = user_name(o.uid),
        TABLE_NAME      = o.name,
        COLUMN_NAME     = c.name,
        COLUMN_GUID     = convert(uniqueidentifier,null),
        COLUMN_PROPID       = convert(int,null),
        ORDINAL_POSITION    = convert(int,
                       (
                        select count(*)
                        from syscolumns sc
                        where sc.id     =  c.id
                          AND sc.number =  c.number
                          AND sc.colid  <= c.colid
                        )),
        COLUMN_HASDEFAULT   = convert(bit, case when m.text is null then 0 else 1 end),

        /* Get rid of ( if it is first char otherwise display the whole thing */
        COLUMN_DEFAULT      = convert(nvarchar(2000),
                                        case when substring(m.text,1,1) = '('
                                            then substring(m.text,2,datalength(m.text)/2-2)
                                            else substring(m.text,1,datalength(m.text)/2-2)
                                        end ), 

        COLUMN_FLAGS        = convert(int,
                        case when d.is_long = 1 
                        then 0x82 /*DBCOLUMNFLAGS_ISLONG|DBCOLUMNFLAGS_MAYDEFER*/
                        else 0
                        end
                    |   case when d.fixlen is not null
                        then 0x10 /*DBCOLUMNFLAGS_ISFIXEDLENGTH*/
                        else 0
                        end
                    |   case when ColumnProperty(c.id,c.name,'AllowsNull') = 1
                        then 0x60 /*DBCOLUMNFLAGS_ISNULLABLE|DBCOLUMNFLAGS_MAYBENULL*/
                        else 0
                        end
                    |   case 
                        when d.type_name = 'timestamp'
                            then 0x200 /*DBCOLUMNFLAGS_ISROWVER*/
                        when (c.status&128) != 128  and permissions(o.id,c.name)&2 = 2
                            then 0x4 /*DBCOLUMNFLAGS_WRITE*/ 
                        else 0 
                        end),
        IS_NULLABLE     = convert(bit,ColumnProperty(c.id,c.name,'AllowsNull')),
        DATA_TYPE       = d.oledb_data_type,
        TYPE_GUID       = convert(uniqueidentifier,null),
        CHARACTER_MAXIMUM_LENGTH= convert(int,
                        case 
                        when d.oledb_data_type = 129 /*DBTYPE_STR*/ 
                            or d.oledb_data_type = 128 /*DBTYPE_BYTES*/
                        then coalesce(d.column_size,c.length)
                        when d.oledb_data_type = 130 /*DBTYPE_WSTR*/
                        then coalesce(d.column_size,c.length/2)
                        else null 
                        end),
        CHARACTER_OCTET_LENGTH  = convert(int,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/ 
                            or d.oledb_data_type = 128 /*DBTYPE_BYTES*/
                        then coalesce(d.column_size,c.length)
                        when d.oledb_data_type = 130 /*DBTYPE_WSTR*/
                        then coalesce(d.column_size*2,c.length)
                        else null 
                        end),
        NUMERIC_PRECISION   = convert(smallint,
                        case when d.oledb_data_type = 131 /*DBTYPE_NUMERIC*/ then c.xprec
                            when (d.fixed_prec_scale =1  or d.oledb_data_type =5 or d.oledb_data_type =4)
                            then d.data_precision else null end),
        NUMERIC_SCALE       = convert(smallint, 
                        case when d.oledb_data_type = 131 /*DBTYPE_NUMERIC*/ then c.scale else null end),
        DATETIME_PRECISION  = convert(int,
                        case when d.oledb_data_type <> 135 /*DBTYPE_DBTIMESTAMP*/ then null
                            when data_precision = 23 then 3 else 0 end),
        CHARACTER_SET_CATALOG   = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then N'master' 
                        else null 
                        end),
        CHARACTER_SET_SCHEMA    = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then N'dbo' 
                        else null 
                        end),
        CHARACTER_SET_NAME  = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then a_cha.name 
                        else null 
                        end),
        COLLATION_CATALOG   = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then N'master' 
                        else null 
                        end),
        COLLATION_SCHEMA    = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then N'dbo' 
                        else null 
                        end),
        COLLATION_NAME      = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then c.collation 
                        else null 
                        end),
        DOMAIN_CATALOG      = case when t.usertype < 256 then null else db_name() end,
        DOMAIN_SCHEMA       = case when t.usertype < 256 then null else user_name(o.uid) end,
        DOMAIN_NAME     = case when t.usertype < 256 then null else t.name end,
        DESCRIPTION     = convert(nvarchar(1),null),
        COLUMN_LCID     = convert(int, CollationPropertyFromID(c.collationid, 'lcid')),
        COLUMN_COMPFLAGS = convert(int, CollationPropertyFromID(c.collationid, 'oledbcompstyle')),
        COLUMN_SORTID = case /* hack to keep the old behavior: will be removed */
                            when ABS(c.collationid) > 0x1000000 
                            then convert(int, DATABASEPROPERTYEX(db_name(),'sqlsortorder'))
                            else null 
                        end,
        COLUMN_TDSCOLLATION = convert (binary(5),CollationPropertyFromID(c.collationid, 'TDSCollation')),
        IS_COMPUTED = convert(bit, c.iscomputed)    
    from
        syscolumns c left join syscomments m on c.cdefault = m.id and m.colid = 1,
        sysobjects o,
        master.dbo.spt_provider_types d,
        systypes t,
        master.dbo.syscharsets      a_cha /* charset/1001, not sortorder. */
    where
        permissions(o.id, c.name) <> 0
    and o.name = @table_name
    and     (o.type in ('U','V','S') OR (o.type in ('TF', 'IF') and c.number = 0))
    and (@table_schema is null or @table_schema = user_name(o.uid))
    and (@column_name is null or @column_name = c.name)
    and     o.id = c.id
    and     t.xtype = d.ss_dtype
    and     c.length = case when d.fixlen > 0 then d.fixlen else c.length end
    and     c.xusertype = t.xusertype
    and a_cha.id = isnull(convert(tinyint, CollationPropertyFromID(c.collationid, 'sqlcharset')),
            convert(tinyint, ServerProperty('sqlcharset'))) -- make sure there's one and only one row selected for each column
    order by 2, 3, c.colorder
go


/*  Procedure for 8.0 server */
create procedure sp_columns_rowset;2
    (
    @table_schema   sysname = NULL,
    @column_name    sysname = NULL
    )
as  
    select
        TABLE_CATALOG       = db_name(),
        TABLE_SCHEMA        = user_name(o.uid),
        TABLE_NAME      = o.name,
        COLUMN_NAME     = c.name,
        COLUMN_GUID     = convert(uniqueidentifier,null),
        COLUMN_PROPID       = convert(int,null),
        ORDINAL_POSITION    = convert(int,
                       (
                        select count(*)
                        from syscolumns sc
                        where sc.id     =  c.id
                          AND sc.number =  c.number
                          AND sc.colid  <= c.colid
                        )),
        COLUMN_HASDEFAULT   = convert(bit, case when m.text is null then 0 else 1 end),
        COLUMN_DEFAULT      = convert(nvarchar(2000),
                                        case when substring(m.text,1,1) = '('
                                            then substring(m.text,2,datalength(m.text)/2-2)
                                            else substring(m.text,1,datalength(m.text)/2-2)
                                        end ), 
        COLUMN_FLAGS        = convert(int,
                        case when d.is_long = 1 
                        then 0x82 /*DBCOLUMNFLAGS_ISLONG|DBCOLUMNFLAGS_MAYDEFER*/
                        else 0
                        end
                    |   case when d.fixlen is not null
                        then 0x10 /*DBCOLUMNFLAGS_ISFIXEDLENGTH*/
                        else 0
                        end
                    |   case when ColumnProperty(c.id,c.name,'AllowsNull') = 1
                        then 0x60 /*DBCOLUMNFLAGS_ISNULLABLE|DBCOLUMNFLAGS_MAYBENULL*/
                        else 0
                        end
                    |   case 
                        when d.type_name = 'timestamp'
                            then 0x200 /*DBCOLUMNFLAGS_ISROWVER*/
                        when (c.status&128) != 128 and permissions(o.id,c.name)&2 = 2
                            then 0x4 /*DBCOLUMNFLAGS_WRITE*/ 
                        else 0 
                        end),
        IS_NULLABLE     = convert(bit,ColumnProperty(c.id,c.name,'AllowsNull')),
        DATA_TYPE       = d.oledb_data_type,
        TYPE_GUID       = convert(uniqueidentifier,null),
        CHARACTER_MAXIMUM_LENGTH= convert(int,
                        case 
                        when d.oledb_data_type = 129 /*DBTYPE_STR*/ 
                            or d.oledb_data_type = 128 /*DBTYPE_BYTES*/
                        then coalesce(d.column_size,c.length)
                        when d.oledb_data_type = 130 /*DBTYPE_WSTR*/
                        then coalesce(d.column_size,c.length/2)
                        else null 
                        end),
        CHARACTER_OCTET_LENGTH  = convert(int,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/ 
                            or d.oledb_data_type = 128 /*DBTYPE_BYTES*/
                        then coalesce(d.column_size,c.length)
                        when d.oledb_data_type = 130 /*DBTYPE_WSTR*/
                        then coalesce(d.column_size*2,c.length)
                        else null 
                        end),
        NUMERIC_PRECISION   = convert(smallint,
                        case when d.oledb_data_type = 131 /*DBTYPE_NUMERIC*/ then c.xprec
                            when (d.fixed_prec_scale =1  or d.oledb_data_type =5 or d.oledb_data_type =4)
                            then d.data_precision else null end),
        NUMERIC_SCALE       = convert(smallint, 
                        case when d.oledb_data_type = 131 /*DBTYPE_NUMERIC*/ then c.scale else null end),
        DATETIME_PRECISION  = convert(int,
                        case when d.oledb_data_type <> 135 /*DBTYPE_DBTIMESTAMP*/ then null
                            when data_precision = 23 then 3 else 0 end),
        CHARACTER_SET_CATALOG   = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then N'master' 
                        else null 
                        end),
        CHARACTER_SET_SCHEMA    = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then N'dbo' 
                        else null 
                        end),
        CHARACTER_SET_NAME  = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then a_cha.name 
                        else null 
                        end),
        COLLATION_CATALOG   = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then N'master' 
                        else null 
                        end),
        COLLATION_SCHEMA    = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then N'dbo' 
                        else null 
                        end),
        COLLATION_NAME      = convert(sysname,
                        case when d.oledb_data_type = 129 /*DBTYPE_STR*/
                        then c.collation 
                        else null 
                        end),
        DOMAIN_CATALOG      = case when t.usertype < 256 then null else db_name() end,
        DOMAIN_SCHEMA       = case when t.usertype < 256 then null else user_name(o.uid) end,
        DOMAIN_NAME     = case when t.usertype < 256 then null else t.name end,
        DESCRIPTION     = convert(nvarchar(1),null),    
        COLUMN_LCID     = convert(int, CollationPropertyFromID(c.collationid, 'lcid')),
        COLUMN_COMPFLAGS = convert(int, CollationPropertyFromID(c.collationid, 'oledbcompstyle')),
        COLUMN_SORTID = case /* hack to keep the old behavior: will be removed */
                            when ABS(c.collationid) > 0x1000000 
                            then convert(int, DATABASEPROPERTYEX(db_name(),'sqlsortorder'))
                            else null 
                        end,
        
        COLUMN_TDSCOLLATION = convert (binary(5),CollationPropertyFromID(c.collationid, 'TDSCollation')),
        IS_COMPUTED = convert(bit, c.iscomputed)
    
    from
        syscolumns c left join syscomments m on c.cdefault = m.id and m.colid = 1,
        sysobjects o,
        master.dbo.spt_provider_types d,
        systypes t,
        master.dbo.syscharsets      a_cha /* charset/1001, not sortorder.*/
    where
        permissions(o.id, c.name) <> 0
    and     (o.type in ('U','V','S') OR (o.type in ('TF', 'IF') and c.number = 0))
    and (@table_schema is null or @table_schema = user_name(o.uid))
    and (@column_name is null or @column_name = c.name)
    and     o.id = c.id
    and     t.xtype = d.ss_dtype
    and     c.length = case when d.fixlen > 0 then d.fixlen else c.length end
    and     c.xusertype = t.xusertype
    and a_cha.type = 1001 /* type is charset */
    and a_cha.id = isnull(convert(tinyint, CollationPropertyFromID(c.collationid, 'sqlcharset')),
            convert(tinyint, ServerProperty('sqlcharset'))) -- make sure there's one and only one row selected for each column
    order by 2, 3, c.colorder
go

dump tran master with no_log
go

/*  Procedure for 8.0 server */
create procedure sp_columns_rowset;5
    (
    @table_server       sysname,
    @table_catalog      sysname = null,
    @table_name     sysname = null,
    @table_schema       sysname = null,
    @column_name        sysname = null
    )
as
    select
        TABLE_CATALOG,
        TABLE_SCHEMA,
        TABLE_NAME,
        COLUMN_NAME,
        COLUMN_GUID,
        COLUMN_PROPID,
        ORDINAL_POSITION,
        COLUMN_HASDEFAULT,
        COLUMN_DEFAULT,
        COLUMN_FLAGS,
        IS_NULLABLE,
        DATA_TYPE,
        TYPE_GUID,
        CHARACTER_MAXIMUM_LENGTH,
        CHARACTER_OCTET_LENGTH,
        NUMERIC_PRECISION,
        NUMERIC_SCALE,
        DATETIME_PRECISION,
        CHARACTER_SET_CATALOG,
        CHARACTER_SET_SCHEMA,
        CHARACTER_SET_NAME,
        COLLATION_CATALOG,
        COLLATION_SCHEMA,
        COLLATION_NAME,
        DOMAIN_CATALOG,
        DOMAIN_SCHEMA,
        DOMAIN_NAME,
        DESCRIPTION

    from master.dbo.SYSREMOTE_COLUMNS (
                @table_server,
                @table_catalog,
                @table_schema,
                @table_name,
                @column_name )
    order by 1, 2, 3, 7
go


grant execute on sp_columns_rowset to public
go

dump tran master with no_log
go
if (charindex('6.00', @@version) > 0)
    begin
    if (exists (select * from sysobjects
            where name = 'sp_columns_rowset' and type = 'P '))
        begin
        drop procedure sp_columns_rowset
        dump tran master with no_log
        end
    end
go

print ''
print 'creating sp_check_constraints_rowset'
go

/*  Procedure for 6.50 and earlier servers */
create procedure sp_check_constraints_rowset
    (
    @constraint_name    varchar(255),
    @constraint_schema  varchar(255) = null
    )
as
    select
        CONSTRAINT_CATALOG  = db_name(),
        CONSTRAINT_SCHEMA   = user_name(c_obj.uid),
        CONSTRAINT_NAME     = c_obj.name,
        CHECK_CLAUSE        = m.text,   
        DESCRIPTION         = convert(varchar(1),null)
    from 
        sysobjects c_obj, syscomments m
    where
            c_obj.type = 'C '
        and c_obj.name  = @constraint_name
        and (@constraint_schema is null or @constraint_schema = user_name(c_obj.uid))
        and c_obj.id = m.id
    order by 1,2,3 
go
dump tran master with no_log
go

create procedure sp_check_constraints_rowset;2
    (
    @constraint_schema  varchar(255) = null
    )
as
    select
        CONSTRAINT_CATALOG  = db_name(),
        CONSTRAINT_SCHEMA   = user_name(c_obj.uid),
        CONSTRAINT_NAME     = c_obj.name,
        CHECK_CLAUSE        = m.text,   
        DESCRIPTION         = convert(varchar(1),null)
    from 
        sysobjects c_obj, syscomments m
    where
            c_obj.type = 'C '
        and (@constraint_schema is null or @constraint_schema = user_name(c_obj.uid))
        and c_obj.id = m.id
    order by 1,2,3 
go
dump tran master with no_log
go

if (charindex('7.00', @@version) > 0 or
    charindex('8.00', @@version) > 0)
    drop procedure sp_check_constraints_rowset
else
begin
    print ''
    print ''
    print 'Warning:'
    print 'you are installing the stored procedures '
    print 'on a pre 7.0 SQL Server.'
    print 'Ignore the following errors.'
end
go

/*  Procedure for 7.0 servers and 8.0 servers */
create procedure sp_check_constraints_rowset
    (
    @constraint_name    sysname,
    @constraint_schema  sysname = null
    )
as
    select
        CONSTRAINT_CATALOG  = db_name(),
        CONSTRAINT_SCHEMA   = user_name(c_obj.uid),
        CONSTRAINT_NAME     = c_obj.name,
        CHECK_CLAUSE        = m.text,   
        DESCRIPTION         = convert(nvarchar(1), null)
    from 
        sysobjects c_obj, syscomments m
    where
            c_obj.type = 'C '
        and c_obj.name  = @constraint_name
        and (@constraint_schema is null or @constraint_schema = user_name(c_obj.uid))
        and m.id = c_obj.id
    order by 1,2,3 
go
dump tran master with no_log
go

create procedure sp_check_constraints_rowset;2
    (
    @constraint_schema  sysname = null
    )
as
    select
        CONSTRAINT_CATALOG  = db_name(),
        CONSTRAINT_SCHEMA   = user_name(c_obj.uid),
        CONSTRAINT_NAME     = c_obj.name,
        CHECK_CLAUSE        = m.text,   
        DESCRIPTION         = convert(nvarchar(1), null)
    from 
        sysobjects c_obj, syscomments m
    where
            c_obj.type = 'C '
        and (@constraint_schema is null or @constraint_schema = user_name(c_obj.uid))
        and m.id = c_obj.id
    order by 1,2,3 
go

grant execute on sp_check_constraints_rowset to public
go

dump tran master with no_log
go

if (charindex('6.00', @@version) > 0)
    begin
    if (exists (select * from sysobjects
            where name = 'sp_check_constraints_rowset' and type = 'P '))
        begin
        drop procedure sp_check_constraints_rowset
        dump tran master with no_log
        end
    end
go

print ''
print 'creating sp_check_constbytable_rowset'
go

/*  Procedure for 6.50 and earlier servers */
create procedure sp_check_constbytable_rowset
    (
    @table_name         varchar(255), 
    @table_schema       varchar(255) = null,
    @constraint_name    varchar(255) = null,
    @constraint_schema  varchar(255) = null
    )
as
    select
        TABLE_CATALOG       = db_name(),
        TABLE_SCHEMA        = user_name(t_obj.uid),
        TABLE_NAME          = t_obj.name,
        CONSTRAINT_CATALOG  = db_name(),
        CONSTRAINT_SCHEMA   = user_name(c_obj.uid),
        CONSTRAINT_NAME     = c_obj.name,
        CHECK_CLAUSE        = m.text,   
        DESCRIPTION         = convert(varchar(1),null)
    from 
        sysobjects c_obj, sysobjects t_obj, sysconstraints c, syscomments m
    where
            t_obj.name  = @table_name
        and t_obj.type in ('U ','S ')
        and (@table_schema is null or @table_schema = user_name(t_obj.uid)) 
        and t_obj.id = c.id
        and c.constid = c_obj.id
        and c_obj.type = 'C '
        and (@constraint_name is null or c_obj.name = @constraint_name)
        and (@constraint_schema is null or @constraint_schema = user_name(c_obj.uid))
        and c_obj.id = m.id
    order by 1,2,3,4,5,6 
go
dump tran master with no_log
go

create procedure sp_check_constbytable_rowset;2
    (
    @table_schema       varchar(255) = null,
    @constraint_name    varchar(255) = null,
    @constraint_schema  varchar(255) = null
    )
as
    select
        TABLE_CATALOG       = db_name(),
        TABLE_SCHEMA        = user_name(t_obj.uid),
        TABLE_NAME          = t_obj.name,
        CONSTRAINT_CATALOG  = db_name(),
        CONSTRAINT_SCHEMA   = user_name(c_obj.uid),
        CONSTRAINT_NAME     = c_obj.name,
        CHECK_CLAUSE        = m.text,   
        DESCRIPTION         = convert(varchar(1),null)
    from 
        sysobjects c_obj, sysobjects t_obj, sysconstraints c, syscomments m
    where
            t_obj.type in ('U ','S ')
        and (@table_schema is null or @table_schema = user_name(t_obj.uid))
        and c.id = t_obj.id
        and c.constid = c_obj.id
        and c_obj.type  = 'C '
        and (@constraint_name is null or c_obj.name = @constraint_name)
        and (@constraint_schema is null or @constraint_schema = user_name(c_obj.uid))
        and c_obj.id = m.id
    order by 1,2,3,4,5,6 
go
dump tran master with no_log
go

if (charindex('7.00', @@version) > 0 or
    charindex('8.00', @@version) > 0)
    drop procedure sp_check_constbytable_rowset
else
begin
    print ''
    print ''
    print 'Warning:'
    print 'you are installing the stored procedures '
    print 'on a pre 8.0 SQL Server.'
    print 'Ignore the following errors.'
end
go

/*  Procedure for 8.0 server */
create procedure sp_check_constbytable_rowset
    (
    @table_name         sysname, 
    @table_schema       sysname = null,
    @constraint_name    sysname = null,
    @constraint_schema  sysname = null
    )
as
    select
        TABLE_CATALOG       = db_name(),
        TABLE_SCHEMA        = user_name(t_obj.uid),
        TABLE_NAME          = t_obj.name,
        CONSTRAINT_CATALOG  = db_name(),
        CONSTRAINT_SCHEMA   = user_name(c_obj.uid),
        CONSTRAINT_NAME     = c_obj.name,
        CHECK_CLAUSE        = m.text,   
        DESCRIPTION         = convert(nvarchar(1), null)

    from 
        sysobjects c_obj, sysobjects t_obj, syscomments m
    where
            t_obj.name  = @table_name
        and t_obj.type in ('U ','S ')
        and (@table_schema is null or @table_schema = user_name(t_obj.uid))
        and c_obj.parent_obj = t_obj.id
        and c_obj.type = 'C '
        and (@constraint_name is null or c_obj.name = @constraint_name)
        and (@constraint_schema is null or @constraint_schema = user_name(c_obj.uid))
        and m.id = c_obj.id
order by 1,2,3,4,5,6 
go
dump tran master with no_log
go
create procedure sp_check_constbytable_rowset;2
    (
    @table_schema       sysname = null,
    @constraint_name    sysname = null,
    @constraint_schema  sysname = null
    )
as
    select
        TABLE_CATALOG       = db_name(),
        TABLE_SCHEMA        = user_name(t_obj.uid),
        TABLE_NAME          = t_obj.name,
        CONSTRAINT_CATALOG  = db_name(),
        CONSTRAINT_SCHEMA   = user_name(c_obj.uid),
        CONSTRAINT_NAME     = c_obj.name,
        CHECK_CLAUSE        = m.text,   
        DESCRIPTION         = convert(nvarchar(1), null)
    from 
        sysobjects c_obj, sysobjects t_obj, syscomments m
    where
            t_obj.type in ('U ','S ')
        and (@table_schema is null or @table_schema = user_name(t_obj.uid))
        and c_obj.parent_obj = t_obj.id
        and c_obj.type = 'C '
        and (@constraint_name is null or c_obj.name = @constraint_name)
        and (@constraint_schema is null or @constraint_schema = user_name(c_obj.uid))
        and m.id = c_obj.id
    order by 1,2,3,4,5,6 
go
dump tran master with no_log
go

grant execute on sp_check_constbytable_rowset to public
go

dump tran master with no_log
go
if (charindex('6.00', @@version) > 0)
    begin
    if (exists (select * from sysobjects
            where name = 'sp_check_constbytable_rowset' and type = 'P '))
        begin
        drop procedure sp_check_constbytable_rowset
        dump tran master with no_log
        end
    end
go


print ''
print 'creating sp_foreign_keys_rowset'
go

/*  Procedure for 6.0 and 6.5 server */
CREATE PROCEDURE sp_foreign_keys_rowset
    (
    @pk_table_name      varchar(255) = null,
    @pk_table_schema    varchar(255) = null,
    @pk_table_catalog   varchar(255) = null,
    @fk_table_name      varchar(255) = null,
    @fk_table_schema    varchar(255) = null,
    @fk_table_catalog   varchar(255) = null
    )
as
    BEGIN
    select
        PK_TABLE_CATALOG    = db_name(r.rkeydbid),
        PK_TABLE_SCHEMA     = user_name(o1.uid),
        PK_TABLE_NAME       = o1.name,
        PK_COLUMN_NAME      = c1.name,
        PK_COLUMN_GUID      = convert(binary(16),null),
        PK_COLUMN_PROPID    = convert(int,null),
        FK_TABLE_CATALOG    = db_name(r.fkeydbid),
        FK_TABLE_SCHEMA     = user_name(o2.uid),
        FK_TABLE_NAME       = o2.name,
        FK_COLUMN_NAME      = c2.name,
        FK_COLUMN_GUID      = convert(binary(16),null),
        FK_COLUMN_PROPID    = convert(int,null),
        ORDINAL             = convert(int,1),
        UPDATE_RULE         = 'NO ACTION',
        DELETE_RULE         = 'NO ACTION',
        PK_NAME             = i.name,
        FK_NAME             = object_name(r.constid),
        DEFERRABILITY       = convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and o1.id = c1.id
    and c1.colid = r.rkey1
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey1
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,2),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 2
    and o1.id = c1.id
    and c1.colid = r.rkey2
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey2
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,3),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 3
    and o1.id = c1.id
    and c1.colid = r.rkey3
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey3
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,4),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 4
    and o1.id = c1.id
    and c1.colid = r.rkey4
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey4
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,5),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 5
    and o1.id = c1.id
    and c1.colid = r.rkey5
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey5
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,6),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 6
    and o1.id = c1.id
    and c1.colid = r.rkey6
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey6
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,7),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 7
    and o1.id = c1.id
    and c1.colid = r.rkey7
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey7
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,8),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 8
    and o1.id = c1.id
    and c1.colid = r.rkey8
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey8
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,9),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 9
    and o1.id = c1.id
    and c1.colid = r.rkey9
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey9
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,10),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 10
    and o1.id = c1.id
    and c1.colid = r.rkey10
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey10
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,11),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 11
    and o1.id = c1.id
    and c1.colid = r.rkey11
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey11
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,12),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 12
    and o1.id = c1.id
    and c1.colid = r.rkey12
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey12
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,13),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 13
    and o1.id = c1.id
    and c1.colid = r.rkey13
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey13
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,14),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 14
    and o1.id = c1.id
    and c1.colid = r.rkey14
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey14
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,15),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 15
    and o1.id = c1.id
    and c1.colid = r.rkey15
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey15
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,16),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and o1.id = c1.id
    and r.keycnt >= 16
    and c1.colid = r.rkey16
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey16
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )
    order by 8,9,2,3,13
    END
go
dump tran master with no_log
go
CREATE PROCEDURE sp_foreign_keys_rowset;2
    (
    @handle         int output,
    @scrollopt      int output,
    @ccopt          int output,
    @rows           int output,
    @pk_table_name      varchar(255) = null,
    @pk_table_schema    varchar(255) = null,
    @pk_table_catalog   varchar(255) = null,
    @fk_table_name      varchar(255) = null,
    @fk_table_schema    varchar(255) = null,
    @fk_table_catalog   varchar(255) = null
    )
as
    declare @ret int
    
    SET NOCOUNT ON

    create table #spfkeysrowset1
        (
        PK_TABLE_CATALOG    sysname not null,
        PK_TABLE_SCHEMA     sysname not null,
        PK_TABLE_NAME       sysname not null,
        PK_COLUMN_NAME      sysname not null,
        PK_COLUMN_GUID      binary(16) null,
        PK_COLUMN_PROPID    int null,
        FK_TABLE_CATALOG    sysname not null,
        FK_TABLE_SCHEMA     sysname not null,
        FK_TABLE_NAME       sysname not null,
        FK_COLUMN_NAME      sysname not null,
        FK_COLUMN_GUID      binary(16) null,
        FK_COLUMN_PROPID    int null,
        ORDINAL             int not null,
        UPDATE_RULE         sysname not null,
        DELETE_RULE         sysname not null,
        PK_NAME             sysname not null,
        FK_NAME             sysname not null,
        DEFERRABILITY       smallint not null       
        )
    BEGIN
    insert into #spfkeysrowset1
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,1),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and o1.id = c1.id
    and c1.colid = r.rkey1
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey1
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )   
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,2),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 2
    and o1.id = c1.id
    and c1.colid = r.rkey2
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey2
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )   
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,3),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 3
    and o1.id = c1.id
    and c1.colid = r.rkey3
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey3
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )   
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,4),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 4
    and o1.id = c1.id
    and c1.colid = r.rkey4
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey4
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )   
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,5),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 5
    and o1.id = c1.id
    and c1.colid = r.rkey5
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey5
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )   
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,6),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 6
    and o1.id = c1.id
    and c1.colid = r.rkey6
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey6
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )   
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,7),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 7
    and o1.id = c1.id
    and c1.colid = r.rkey7
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey7
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )   
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,8),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 8
    and o1.id = c1.id
    and c1.colid = r.rkey8
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey8
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )   
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,9),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 9
    and o1.id = c1.id
    and c1.colid = r.rkey9
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey9
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )   
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,10),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 10
    and o1.id = c1.id
    and c1.colid = r.rkey10
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey10
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )   
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,11),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 11
    and o1.id = c1.id
    and c1.colid = r.rkey11
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey11
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )   
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,12),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 12
    and o1.id = c1.id
    and c1.colid = r.rkey12
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey12
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )   
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,13),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 13
    and o1.id = c1.id
    and c1.colid = r.rkey13
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey13
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )   
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,14),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 14
    and o1.id = c1.id
    and c1.colid = r.rkey14
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey14
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    )   
    union all
    select
        db_name(r.rkeydbid),
        user_name(o1.uid),
        o1.name,
        c1.name,
        convert(binary(16),null),
        convert(int,null),
        db_name(r.fkeydbid),
        user_name(o2.uid),
        o2.name,
        c2.name,
        convert(binary(16),null),
        convert(int,null),
        convert(int,15),
        'NO ACTION',
        'NO ACTION',
        i.name,
        object_name(r.constid),
        convert(smallint, 3) /*DBPROPVAL_DF_NOT_DEFERRABLE*/
    from
        sysobjects o1, sysobjects o2,
        syscolumns c1, syscolumns c2,
        sysreferences r, sysindexes i, sysusers u
    where   
        (@pk_table_catalog is null or @pk_table_catalog = db_name())
    and     (@fk_table_catalog is null or @fk_table_catalog = db_name())
    and (@pk_table_schema is null or @pk_table_schema = user_name(o1.uid))
    and (@pk_table_name is null or @pk_table_name = o1.name)
    and (@fk_table_name is null or @fk_table_name = o2.name)
    and o1.id = r.rkeyid
    and r.keycnt >= 15
    and o1.id = c1.id
    and c1.colid = r.rkey15
    and r.fkeyid = o2.id
    and (@fk_table_schema is null or @fk_table_schema = user_name(o2.uid))
    and o2.id = c2.id   
    and c2.colid = r.fkey15
    and i.id = r.rkeyid
    and i.indid = r.rkeyindid
    and u.uid = user_id()
    and ( suser_id() = 1     /* User is the System Administrator */
    or (
        o1.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o1.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
            ) = 1   /* final magic...compare Grants   */
        )
    and (
        o2.uid = user_id()   /* User created the object */
        /* here's the magic... select the highest precedence of permissions in the order (user,group,public)  */
        or (    (select max(((sign(uid)*abs(uid-16383))*2)+(protecttype&1))
            from sysprotects p
            where p.id = o2.id
            /* get rows for public,current user,user's group */
            and (p.uid = 0 or p.uid = user_id() or p.uid = u.gid)
            /* check for SELECT,EXECUTE privilege */
            and (action in (193,224)))&1     /* more magic...normalize GRANT */
  